{"version":3,"sources":["container/Dashboard.js","container/Profile.js","components/Employee/BasicDetails.js","components/Employee/ContactDetails.js","components/Employee/Details.js","components/Leave/ReadLeaves.js","components/Employee/AddEmployee.js","components/Leave/RequetLeave.js","components/Leave/PendingLeaves.js","components/Employee/ViewEmployee.js","container/Pdfs.js","container/Sidebar.js","auth/Login.js","auth/Register.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","state","user","value","data","filter","favorites","user_name","undefined","visible","name","salary","contact","email","showDrawer","id","_this","setState","axios","get","then","res","console","log","catch","err","swal","onClose","handleUpdate","e","preventDefault","props","form","validateFieldsAndScroll","values","password","put","history","push","_this2","this","_this3","i","length","user_id","_this4","text","buttons","confirm","cancel","willSearch","_this5","_this$state","us","getFieldDecorator","react_default","a","createElement","content","className","map","item","Fragment","key","style","maxWidth","descriptions","Item","label","food","drink","animal","bird","hobby","place","card","row","gutter","col","span","progress","type","percent","format","concat","Table_default","striped","bordered","hover","clear","whiteSpace","popover","placement","title","trigger","es_button","onClick","handleClick","bind","shape","icon","handleDelete","drawer","width","es_form","layout","hideRequiredMark","rules","required","message","whitespace","input","prefix","color","placeholder","position","left","bottom","borderTop","padding","background","textAlign","marginRight","Component","Dash","Form","create","Profile","table","columns","dataIndex","dataSource","pagination","pageSize","scroll","y","React","BasicDetails","handleConfirmBlur","target","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","Object","assign","labelCol","xs","sm","wrapperCol","onSubmit","handleSubmit","htmlType","WrappedRegistrationForm","ContactDetails","Details","basic","educational","Experions","favorite","localStorage","getItem","post","es_menu","defaultSelectedKeys","mode","react_router_dom","to","float","height","react_router","path","component","paddingTop","paddingLeft","alt","src","onSelect","len","onSearch","searchText","arr","re","RegExp","string","match","onChange","auto_complete","Option","Select","AutoCompleteOption","AutoComplete","AddEmployee","autoCompleteResult","handleWebsiteChange","domain","tailFormItemLayout","offset","prefixSelector","initialValue","es_select","websiteOptions","website","es_radio","Group","defaultValue","tooltip","addonBefore","date_picker","WrappedAddEmployee","RangePicker","DatePicker","TextArea","Input","RequetLeave","RequetLeave_AutoCompleteOption","Button","es_switch","rows","WrappedRequestLeave","PendingLeaves","wrappedPendingLeaves","ViewEmployee","wrappedViewEmployee","ref","createRef","loginStyle","maxHeight","margin","border","borderRadius","Pdfs","react_to_pdf_default","x","targetRef","filename","_ref","toPdf","Header","Layout","Content","Footer","Sider","SubMenu","Menu","SiderDemo","collapsed","redirectToReferrer","onCollapse","removeItem","changePassword","passwordHash","require","hashedPassword","generate","newpassword","verify","menu","Login","minHeight","collapsible","theme","backgroundColor","avatar","verticalAlign","size","dropdown","overlay","LeavesHistory","Pdf","exact","hasFeedback","validator","Password","onBlur","Main","NormalLoginForm","handleLogin","username","setItem","window","location","reload","Sidebar","valuePropName","es_checkbox","WrappedNormalLoginForm","RegistrationForm","paddingRight","href","App","Register","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76765aa0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'antd/dist/antd.css';\r\nimport { Button, Descriptions, Popover, Drawer, Form, Row, Col, Input, Icon, Card, Progress } from 'antd';\r\nimport swal from 'sweetalert';\r\n\r\nclass Dashboard extends Component {\r\n    \r\n    componentWillMount(){\r\n        this.setState({\r\n            data : []\r\n        })\r\n        axios.get('http://localhost:5000/all')\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            this.setState({\r\n                data : res.data\r\n            })\r\n        }) \r\n    } \r\n\r\n    state = {\r\n        user : false,\r\n        value : '',\r\n        data : [],\r\n        filter : [],\r\n        favorites : [],\r\n        user_name : undefined,\r\n        visible : false,\r\n\r\n        name: undefined,\r\n        salary: undefined,\r\n        contact: undefined,\r\n        email: undefined\r\n    }\r\n   \r\n    showDrawer = (id) => {\r\n        this.setState({\r\n          visible: true,\r\n          id : id\r\n        });\r\n        axios.get('http://localhost:5000/search/'+id)\r\n        .then(res => {\r\n            this.setState({\r\n                name : res.data.name,\r\n                email: res.data.email,\r\n                contact: res.data.contact,\r\n                salary : res.data.salary\r\n            })\r\n            console.log(\"aaaaaaaa\",res.data)\r\n        }).catch( err => {\r\n            console.log(err)\r\n            swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n        }) \r\n      };\r\n    \r\n    onClose = () => {\r\n        this.setState({\r\n          visible: false\r\n        });\r\n    };\r\n\r\n    handleClick(id) {\r\n        axios.get('http://localhost:5000/favorites/'+id)\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            this.setState({\r\n                favorites : res.data,\r\n                user_name : res.data[0].user_name\r\n            })\r\n            console.log(this.state.user_name);\r\n        }).catch(e => {\r\n            const data = this.state.data;\r\n            for(let i=0; i<data.length;i++){\r\n                if(this.state.data[i].user_id === id){\r\n                    let user = this.state.data[i].name;\r\n                    this.setState({\r\n                        favorites : [],\r\n                        user_name : user\r\n                    })\r\n                    swal(\"Oops!\",  user+\" hasn't any favorites!!!\", \"warning\" );\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                const user = {\r\n                    name: values.name || undefined,\r\n                    email: values.email || undefined,\r\n                    contact: values.contact || undefined,\r\n                    salary: values.salary || undefined\r\n                }\r\n\r\n                if(user.name === this.state.name && user.password === this.state.password && user.salary === this.state.salary && user.email === this.state.email && user.contact === this.state.contact){\r\n                    \r\n                    swal(\"Ohhh!\",\"Didn't change any field!!!\", \"warning\");\r\n                \r\n                }else{\r\n\r\n                    axios.put('http://localhost:5000/update/'+this.state.id, user)\r\n                    .then(res => {\r\n                        console.log(\"res\", res.data);\r\n                        swal(\"Yeah!\",\"User is updated!!!\",\"success\");\r\n                        this.onClose();\r\n                        this.props.history.push('/dashboard');\r\n                    }).catch(e=>{\r\n                        console.log(\"error\", e);\r\n                        swal(\"Oops!\",\"User not updated!!!\",\"error\");\r\n                        this.onClose();\r\n                    })\r\n                }\r\n                console.log(\"state\", user);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDelete(id,e) {\r\n        e.preventDefault();\r\n        \r\n        swal({\r\n            text: \"Wanna delete that user?\",\r\n            buttons: {\r\n                confirm: \"Delete\",\r\n                cancel: true,\r\n            }\r\n        })\r\n        .then(willSearch => {\r\n            if (willSearch) {\r\n                axios.get('http://localhost:5000/delete/'+id)\r\n                .then(res => {\r\n                    swal(\"Yeah!\",res.data,\"success\"); \r\n                    this.props.history.push('/dashboard'); \r\n                }).catch( err => {\r\n                    swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { value, data, user, filter, favorites, user_name, visible} = this.state; \r\n        let us = user; \r\n        const { getFieldDecorator } = this.props.form;\r\n       \r\n        const text = <h6>{user_name}'s Favorites</h6>;\r\n        const content = (\r\n            \r\n            <div className=\"scrollable-container-pop\">\r\n            <div className=\"background-pop\">\r\n            {favorites.map(item => (\r\n                <React.Fragment key={item.id}>                        \r\n                   <div style={{maxWidth: \"600px\"}}>\r\n                        <Descriptions >\r\n                            <Descriptions.Item label=\"Food\">{item.food}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Drink\">{item.drink}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Animal\">{item.animal}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Bird\"> {item.bird}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Hobby\">{item.hobby}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Place\"> {item.place} </Descriptions.Item>\r\n                        </Descriptions>\r\n                        <hr/>\r\n                    </div>\r\n                </React.Fragment>\r\n            ))}\r\n            </div>\r\n            </div>\r\n        );      \r\n\r\n        return (\r\n            <div className='center'>\r\n                <Card>\r\n                <Row gutter={16}>\r\n                <Col span={8}>    \r\n                <Progress type=\"circle\" percent={75} format={percent => `${percent} Days`}/>\r\n                <br/>\r\n                <span>Annual Leave</span>\r\n                </Col>\r\n                <Col span={8}>\r\n                <Progress type=\"circle\" percent={50} />\r\n                <br/>\r\n                <span>Casual Leave</span>\r\n                </Col>\r\n                <Col span={8}>\r\n                <Progress type=\"circle\" percent={100} />\r\n                <br/>\r\n                <span>Medical Leave</span>\r\n                </Col>\r\n                </Row>\r\n                </Card>\r\n                <br/>\r\n                <div  className=\"white card z-depth-0 card-content center\">  \r\n                <div className=\"scrollable-container-dash\">\r\n                <div className=\"background\">\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                       <tr>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td><h6>Id</h6></td>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td><h6>Name</h6></td>\r\n                            <td><h6>Email</h6></td>\r\n                            <td><h6>Contact</h6></td>\r\n                            <td><h6> Salary</h6></td>\r\n                            <td><h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h6></td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {us && value!==''? \r\n                        <tr>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td> {filter.user_id} </td>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td> {filter.name} </td>\r\n                            <td> {filter.email} </td>\r\n                            <td> {filter.contact} </td>\r\n                            <td> {filter.salary} </td>\r\n                            <td> \r\n                                <div className=\"demo\">\r\n                                <div style={{ clear: 'both', whiteSpace: 'nowrap' }}>\r\n                                    <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                                    <Button type=\"primary\" onClick={this.handleClick.bind(this, filter.user_id)} shape=\"circle\" icon=\"search\" />\r\n                                    </Popover>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button type=\"primary\" onClick={this.showDrawer.bind(this, filter.user_id)} shape=\"circle\" icon=\"edit\" />\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button type=\"danger\" onClick={this.handleDelete.bind(this, filter.user_id)} shape=\"circle\" icon=\"delete\" />\r\n                                </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        :   data.map(item => (\r\n                            <React.Fragment key={item.user_id}>                        \r\n                                <tr>\r\n                                    <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                                    <td> {item.user_id} </td>\r\n                                    <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                                    <td> {item.name} </td>\r\n                                    <td> {item.email} </td>\r\n                                    <td> {item.contact} </td>\r\n                                    <td> {item.salary} </td>\r\n                                    <td> \r\n                                        <div className=\"demo\">\r\n                                        <div style={{ clear: 'both', whiteSpace: 'nowrap' }}>\r\n                                            <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                                            <Button type=\"primary\" onClick={this.handleClick.bind(this, item.user_id)} shape=\"circle\" icon=\"search\" />\r\n                                            </Popover>\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <Button type=\"primary\" onClick={this.showDrawer.bind(this, item.user_id)} shape=\"circle\" icon=\"edit\" />\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <Button type=\"danger\" onClick={this.handleDelete.bind(this, item.user_id)} shape=\"circle\" icon=\"delete\" />\r\n                                        </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </React.Fragment>\r\n                                ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                </div>\r\n                </div>\r\n           <div>        \r\n          <Drawer\r\n          title=\"User Update\"\r\n          width={400}\r\n          onClose={this.onClose}\r\n          visible={visible}\r\n          >\r\n          <Form layout=\"vertical\" hideRequiredMark>\r\n            \r\n            <Row gutter={16}>\r\n            <Form.Item >\r\n                {getFieldDecorator(\"name\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your nickname!\",\r\n                        whitespace: true\r\n                    }\r\n                    ]\r\n                })(<Input\r\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                placeholder=\"User Name\"\r\n                />)\r\n                }\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                    {\r\n                        type: \"email\",\r\n                        message: \"The input is not valid E-mail!\"\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your E-mail!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Email\"\r\n                    />)}\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"salary\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your Salary Amount!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"dollar\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Salary\"\r\n                />)}\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"contact\", {\r\n                    rules: [\r\n                    { required: true, message: \"Please input your phone number!\" }\r\n                    ]\r\n                })(<Input\r\n                    prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Contact Number\" \r\n                    />)}\r\n            </Form.Item>\r\n            </Row>\r\n          </Form>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              bottom: 0,\r\n              width: '100%',\r\n              borderTop: '1px solid #e9e9e9',\r\n              padding: '10px 16px',\r\n              background: '#fff',\r\n              textAlign: 'right',\r\n            }}\r\n          >\r\n            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleUpdate} type=\"primary\">\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </Drawer>\r\n        </div>\r\n              \r\n        </div>\r\n        )\r\n    }\r\n}    \r\n\r\nconst Dash = Form.create({name: \"dashboard\"})(Dashboard);\r\n\r\nexport default Dash;","\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Table } from 'antd';\r\n\r\nexport default class Profile extends React.Component {\r\n  \r\n  render() {\r\n\r\n    const columns = [\r\n      {\r\n        title: 'User',\r\n        dataIndex: 'user_name',\r\n        width: 150,\r\n      },\r\n      {\r\n        title: 'Food',\r\n        dataIndex: 'food',\r\n        width: 150,\r\n      },\r\n      {\r\n        title: 'Drink',\r\n        dataIndex: 'drink',\r\n      },\r\n      {\r\n        title: 'Animal',\r\n        dataIndex: 'animal',\r\n        width: 150,\r\n      },\r\n      {\r\n        title: 'Bird',\r\n        dataIndex: 'bird',\r\n        width: 150,\r\n      },\r\n      {\r\n        title: 'Hobby',\r\n        dataIndex: 'hobby',\r\n      },\r\n      {\r\n        title: 'Place',\r\n        dataIndex: 'place',\r\n      },\r\n    ];\r\n\r\n    const data = [{\"id\":23,\"user_id\":1,\"user_name\":\"Pramuditha\",\"food\":\"Choco\",\"drink\":\"Ice Coffee\",\"animal\":\"Elephant\",\"bird\":\"Peacock\",\"hobby\":\"Hiking\",\"place\":\"Kandy\"},{\"id\":24,\"user_id\":3,\"user_name\":\"Achini\",\"food\":\"Cakes\",\"drink\":\"Faluda\",\"animal\":\"Dog\",\"bird\":\"Humming bird\",\"hobby\":\"Traveling\",\"place\":\"Badulla\"},{\"id\":25,\"user_id\":4,\"user_name\":\"Kapila\",\"food\":\"Rice\",\"drink\":\"Tea\",\"animal\":\"Camel\",\"bird\":\"Penguin\",\"hobby\":\"Bloging\",\"place\":\"Ampara\"},{\"id\":26,\"user_id\":2,\"user_name\":\"Himsara\",\"food\":\"Burger\",\"drink\":\"Black Coffee\",\"animal\":\"Bull\",\"bird\":\"Bat\",\"hobby\":\"Badminton\",\"place\":\"Mountlavinia\"},{\"id\":27,\"user_id\":6,\"user_name\":\"Monali\",\"food\":\"Popcorn\",\"drink\":\"Green Tea\",\"animal\":\"Dog\",\"bird\":\"Bat\",\"hobby\":\"Gaming\",\"place\":\"Namunukula\"},{\"id\":28,\"user_id\":5,\"user_name\":\"Madara\",\"food\":\"Pizza\",\"drink\":\"Nutela \",\"animal\":\"Panda\",\"bird\":\"Cock\",\"hobby\":\"Reading\",\"place\":\"Sembuwatta\"},{\"id\":30,\"user_id\":1,\"user_name\":\"Pramuditha\",\"food\":\"Potato chips\",\"drink\":\"Beer\",\"animal\":\"Donkey\",\"bird\":\"Cock\",\"hobby\":\"Camping\",\"place\":\"Chariot Path\"}];\r\n    \r\n\r\n    return(\r\n      <Table columns={columns} dataSource={data} pagination={{ pageSize: 50 }} scroll={{ y: 240 }} />\r\n    )\r\n  }\r\n}\r\n\r\n  \r\n          ","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Icon,\r\n    Button\r\n  } from \"antd\";\r\n\r\nclass BasicDetails extends React.Component {\r\n\r\n    handleConfirmBlur = e => {\r\n        const { value } = e.target;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n      };\r\n    \r\n      compareToFirstPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && value !== form.getFieldValue(\"password\")) {\r\n          callback(\"Two passwords that you enter is inconsistent!\");\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n    \r\n      validateToNextPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && this.state.confirmDirty) {\r\n          form.validateFields([\"confirm\"], { force: true });\r\n        }\r\n        callback();\r\n      };\r\n\r\n    render() {\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n        return(\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                <Form.Item >\r\n                {getFieldDecorator(\"food\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your favorite food!\",\r\n                        whitespace: true\r\n                    }\r\n                    ]\r\n                })(\r\n                    <Input\r\n                    prefix={<Icon type=\"shopping-cart\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Food\"\r\n                    />\r\n                )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"drink\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your favorite drink\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"coffee\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Drink\"\r\n                    />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"animal\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your favorite animal!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"bug\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Animal\"\r\n                />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"bird\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your favorite bird!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"qq\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Bird\"\r\n                />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"hobby\", {\r\n                    rules: [\r\n                    { required: true, message: \"Please input your favorite hobby!\" }\r\n                    ]\r\n                })(<Input\r\n                    prefix={<Icon type=\"video-camera\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Hobby\" \r\n                    />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"place\", {\r\n                    rules: [\r\n                    { required: true, message: \"Please input your favorite place!\" }\r\n                    ]\r\n                })(<Input\r\n                    prefix={<Icon type=\"environment\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Place\" \r\n                    />)}\r\n                </Form.Item>\r\n                <br/><br/>\r\n                <Form.Item>\r\n                <Button onClick={this.handleSubmit} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Submit\r\n                </Button>\r\n                </Form.Item>\r\n            </Form> \r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: \"basic\" })(BasicDetails);\r\n  \r\nexport default WrappedRegistrationForm;","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n    Form,\r\n    Input,\r\n    Icon,\r\n    Button\r\n  } from \"antd\";\r\n\r\nclass ContactDetails extends React.Component {\r\n\r\n    handleConfirmBlur = e => {\r\n        const { value } = e.target;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n      };\r\n    \r\n      compareToFirstPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && value !== form.getFieldValue(\"password\")) {\r\n          callback(\"Two passwords that you enter is inconsistent!\");\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n    \r\n      validateToNextPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && this.state.confirmDirty) {\r\n          form.validateFields([\"confirm\"], { force: true });\r\n        }\r\n        callback();\r\n      };\r\n\r\n    render() {\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n        return(\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                <Form.Item >\r\n                {getFieldDecorator(\"food\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your favorite food!\",\r\n                        whitespace: true\r\n                    }\r\n                    ]\r\n                })(\r\n                    <Input\r\n                    prefix={<Icon type=\"heart\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Food\"\r\n                    />\r\n                )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"drink\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your favorite drink\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"coffee\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Drink\"\r\n                    />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"animal\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your favorite animal!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"bug\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Animal\"\r\n                />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"bird\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your favorite bird!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"qq\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Bird\"\r\n                />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"hobby\", {\r\n                    rules: [\r\n                    { required: true, message: \"Please input your favorite hobby!\" }\r\n                    ]\r\n                })(<Input\r\n                    prefix={<Icon type=\"video-camera\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Hobby\" \r\n                    />)}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                {getFieldDecorator(\"place\", {\r\n                    rules: [\r\n                    { required: true, message: \"Please input your favorite place!\" }\r\n                    ]\r\n                })(<Input\r\n                    prefix={<Icon type=\"environment\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Place\" \r\n                    />)}\r\n                </Form.Item>\r\n                <br/><br/>\r\n                <Form.Item>\r\n                <Button onClick={this.handleSubmit} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Submit\r\n                </Button>\r\n                </Form.Item>\r\n            </Form> \r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: \"basic\" })(ContactDetails);\r\n  \r\nexport default WrappedRegistrationForm;","import React from \"react\";\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport \"antd/dist/antd.css\";\r\nimport \"../../container/index.css\";\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport BasicDetails from './BasicDetails';\r\nimport ContactDetails from './ContactDetails';\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Card,\r\n  Menu\r\n} from \"antd\";\r\n\r\nclass Details extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    basic: false,\r\n    contact: false,\r\n    educational: false,\r\n    Experions: false\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        \r\n        const favorite = {\r\n            user_id: localStorage.getItem(\"id\"),\r\n            user_name: localStorage.getItem(\"user\"),\r\n            food: values.food || undefined,\r\n            drink: values.drink || undefined,\r\n            animal: values.animal || undefined,\r\n            bird: values.bird || undefined,\r\n            hobby: values.hobby || undefined,\r\n            place: values.place || undefined\r\n        }\r\n        axios.post('http://localhost:5000/savefavo', favorite)\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            swal(\"OMG!\",\"User Favorite Submited!!!\",\"success\");\r\n        }).catch(e => console.log(\"eeeeeeeeeeee\",e));\r\n        this.props.history.push('/read'); \r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div>\r\n      \r\n      <Menu onClick={this.handleClick} defaultSelectedKeys={['1']} mode=\"horizontal\">\r\n        <Menu.Item key=\"1\">\r\n          <Link to='/add_employee/basic'/>\r\n          <Icon type=\"mail\" />\r\n          Basic Details\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" >\r\n          <Link to='/add_employee/contact'/>\r\n          <Icon type=\"appstore\" />\r\n          Contact Details\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" >\r\n          <Link to='/add_employee/educational'/>\r\n          <Icon type=\"appstore\" />\r\n          Educational Details\r\n        </Menu.Item>\r\n        <Menu.Item key=\"4\" >\r\n          <Link to='/add_employee/experions'/>\r\n          <Icon type=\"appstore\" />\r\n          Experions Details\r\n        </Menu.Item>\r\n      </Menu> \r\n      \r\n      <div className=\"scrollable-container-fav\" style={{width:'800px', float:'left'}}>       \r\n      <div className=\"background-fav\">\r\n      <Card bordered={false} style={{ width: 780, height: '600px'}}>\r\n      <Switch>\r\n        <Route path='/add_employee/basic' component={BasicDetails} />\r\n        <Route path='/add_employee/contact' component={ContactDetails} />\r\n      </Switch>\r\n      </Card>\r\n      </div>\r\n      </div>\r\n      \r\n      <div style={{float: 'right', height: '550px', paddingTop: '0px', paddingLeft: '0px'}}>\r\n        <img height= '530px' width= '475px' alt=\"example\" src=\"https://packagetoursturkey.com/wp-content/uploads/2018/06/beach-calm-clouds-457882.jpg\" />\r\n      </div> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: \"favorite\" })(\r\n  Details\r\n);\r\n\r\n\r\nexport default WrappedRegistrationForm;\r\n\r\n/* \r\n<Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item >\r\n          {getFieldDecorator(\"food\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your favorite food!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"shopping-cart\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"Food\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"drink\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your favorite drink\"\r\n              }\r\n            ]\r\n          })(<Input \r\n            prefix={<Icon type=\"coffee\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Drink\"\r\n            />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"animal\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your favorite animal!\"\r\n              }\r\n            ]\r\n          })(<Input \r\n            prefix={<Icon type=\"bug\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Animal\"\r\n          />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"bird\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your favorite bird!\"\r\n              }\r\n            ]\r\n          })(<Input \r\n            prefix={<Icon type=\"qq\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Bird\"\r\n          />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"hobby\", {\r\n            rules: [\r\n              { required: true, message: \"Please input your favorite hobby!\" }\r\n            ]\r\n          })(<Input\r\n            prefix={<Icon type=\"video-camera\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Hobby\" \r\n            />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"place\", {\r\n            rules: [\r\n              { required: true, message: \"Please input your favorite place!\" }\r\n            ]\r\n          })(<Input\r\n            prefix={<Icon type=\"environment\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Place\" \r\n            />)}\r\n        </Form.Item>\r\n        <br/><br/>\r\n        <Form.Item>\r\n          <Button onClick={this.handleSubmit} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form> */\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'antd/dist/antd.css';\r\nimport { AutoComplete, Button, Descriptions, Popover, Drawer, Form, Row, Input, Icon } from 'antd';\r\nimport swal from 'sweetalert';\r\n\r\nclass Dashboard extends Component {\r\n    \r\n    componentWillMount(){\r\n        this.setState({\r\n            data : []\r\n        })\r\n        axios.get('http://localhost:5000/all')\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            this.setState({\r\n                data : res.data\r\n            })\r\n        }) \r\n    } \r\n\r\n    state = {\r\n        user : false,\r\n        value : '',\r\n        dataSource : [],\r\n        data : [],\r\n        filter : [],\r\n        favorites : [],\r\n        user_name : undefined,\r\n        visible : false,\r\n\r\n        name: undefined,\r\n        salary: undefined,\r\n        contact: undefined,\r\n        email: undefined\r\n    }\r\n   \r\n    showDrawer = (id) => {\r\n        this.setState({\r\n          visible: true,\r\n          id : id\r\n        });\r\n        axios.get('http://localhost:5000/search/'+id)\r\n        .then(res => {\r\n            this.setState({\r\n                name : res.data.name,\r\n                email: res.data.email,\r\n                contact: res.data.contact,\r\n                salary : res.data.salary\r\n            })\r\n            console.log(\"aaaaaaaa\",res.data)\r\n        }).catch( err => {\r\n            console.log(err)\r\n            swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n        }) \r\n      };\r\n    \r\n    onClose = () => {\r\n        this.setState({\r\n          visible: false\r\n        });\r\n    };\r\n\r\n    handleClick(id) {\r\n        axios.get('http://localhost:5000/favorites/'+id)\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            this.setState({\r\n                favorites : res.data,\r\n                user_name : res.data[0].user_name\r\n            })\r\n            console.log(this.state.user_name);\r\n        }).catch(e => {\r\n            const data = this.state.data;\r\n            for(let i=0; i<data.length;i++){\r\n                if(this.state.data[i].user_id === id){\r\n                    let user = this.state.data[i].name;\r\n                    this.setState({\r\n                        favorites : [],\r\n                        user_name : user\r\n                    })\r\n                    swal(\"Oops!\",  user+\" hasn't any favorites!!!\", \"warning\" );\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                const user = {\r\n                    name: values.name || undefined,\r\n                    email: values.email || undefined,\r\n                    contact: values.contact || undefined,\r\n                    salary: values.salary || undefined\r\n                }\r\n\r\n                if(user.name === this.state.name && user.password === this.state.password && user.salary === this.state.salary && user.email === this.state.email && user.contact === this.state.contact){\r\n                    \r\n                    swal(\"Ohhh!\",\"Didn't change any field!!!\", \"warning\");\r\n                \r\n                }else{\r\n\r\n                    axios.put('http://localhost:5000/update/'+this.state.id, user)\r\n                    .then(res => {\r\n                        console.log(\"res\", res.data);\r\n                        swal(\"Yeah!\",\"User is updated!!!\",\"success\");\r\n                        this.onClose();\r\n                        this.props.history.push('/dashboard');\r\n                    }).catch(e=>{\r\n                        console.log(\"error\", e);\r\n                        swal(\"Oops!\",\"User not updated!!!\",\"error\");\r\n                        this.onClose();\r\n                    })\r\n                }\r\n                console.log(\"state\", user);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDelete(id,e) {\r\n        e.preventDefault();\r\n        \r\n        swal({\r\n            text: \"Wanna delete that user?\",\r\n            buttons: {\r\n                confirm: \"Delete\",\r\n                cancel: true,\r\n            }\r\n        })\r\n        .then(willSearch => {\r\n            if (willSearch) {\r\n                axios.get('http://localhost:5000/delete/'+id)\r\n                .then(res => {\r\n                    swal(\"Yeah!\",res.data,\"success\"); \r\n                    this.props.history.push('/dashboard'); \r\n                }).catch( err => {\r\n                    swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onSelect = (value) => {\r\n        const data = this.state.data;\r\n        let len = data.length;\r\n        for(var i=0; i<len; i++){\r\n          var string = data[i][\"name\"];\r\n          if(value===string){\r\n            this.setState({\r\n                user : true,\r\n                filter : data[i]\r\n              });\r\n          }}\r\n        \r\n      }\r\n    \r\n      onSearch = searchText => {\r\n        const data = this.state.data;\r\n        let len = data.length;\r\n        var arr = [];\r\n        for(var i=0; i<len; i++){\r\n          var re = new RegExp(searchText, 'gi');\r\n          var string = data[i][\"name\"];\r\n          if(string.match(re)){\r\n            arr.push(string);\r\n          }}\r\n        this.setState({\r\n          dataSource: arr\r\n        });\r\n      };\r\n    \r\n      onChange = value => {\r\n        this.setState({ value });\r\n      };\r\n\r\n    render() {\r\n        const { dataSource, value, data, user, filter, favorites, user_name, visible} = this.state; \r\n        let us = user; \r\n        const { getFieldDecorator } = this.props.form;\r\n       \r\n        const text = <h6>{user_name}'s Favorites</h6>;\r\n        const content = (\r\n            \r\n            <div className=\"scrollable-container-pop\">\r\n            <div className=\"background-pop\">\r\n            {favorites.map(item => (\r\n                <React.Fragment key={item.id}>                        \r\n                   <div style={{maxWidth: \"600px\"}}>\r\n                        <Descriptions >\r\n                            <Descriptions.Item label=\"Food\">{item.food}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Drink\">{item.drink}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Animal\">{item.animal}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Bird\"> {item.bird}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Hobby\">{item.hobby}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Place\"> {item.place} </Descriptions.Item>\r\n                        </Descriptions>\r\n                        <hr/>\r\n                    </div>\r\n                </React.Fragment>\r\n            ))}\r\n            </div>\r\n            </div>\r\n        );      \r\n\r\n        return (\r\n            <div>\r\n                <AutoComplete\r\n                    value={value}\r\n                    dataSource={dataSource}\r\n                    style={{ width: 200}}\r\n                    onSelect={this.onSelect}\r\n                    onSearch={this.onSearch}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Filter Here By Name\"\r\n                    />\r\n            <div  className=\"white card z-depth-0 card-content center\">\r\n                <div className=\"scrollable-container-leave\">\r\n                <div className=\"background-fav\">\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                       <tr>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td><h6>Id</h6></td>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td><h6>Name</h6></td>\r\n                            <td><h6>Email</h6></td>\r\n                            <td><h6>Contact</h6></td>\r\n                            <td><h6> Salary</h6></td>\r\n                            <td><h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h6></td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {us && value!==''? \r\n                        <tr>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td> {filter.user_id} </td>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td> {filter.name} </td>\r\n                            <td> {filter.email} </td>\r\n                            <td> {filter.contact} </td>\r\n                            <td> {filter.salary} </td>\r\n                            <td> \r\n                                <div className=\"demo\">\r\n                                <div style={{ clear: 'both', whiteSpace: 'nowrap' }}>\r\n                                    <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                                    <Button type=\"primary\" onClick={this.handleClick.bind(this, filter.user_id)} shape=\"circle\" icon=\"search\" />\r\n                                    </Popover>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button type=\"primary\" onClick={this.showDrawer.bind(this, filter.user_id)} shape=\"circle\" icon=\"edit\" />\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button type=\"danger\" onClick={this.handleDelete.bind(this, filter.user_id)} shape=\"circle\" icon=\"delete\" />\r\n                                </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        :   data.map(item => (\r\n                            <React.Fragment key={item.user_id}>                        \r\n                                <tr>\r\n                                    <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                                    <td> {item.user_id} </td>\r\n                                    <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                                    <td> {item.name} </td>\r\n                                    <td> {item.email} </td>\r\n                                    <td> {item.contact} </td>\r\n                                    <td> {item.salary} </td>\r\n                                    <td> \r\n                                        <div className=\"demo\">\r\n                                        <div style={{ clear: 'both', whiteSpace: 'nowrap' }}>\r\n                                            <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                                            <Button type=\"primary\" onClick={this.handleClick.bind(this, item.user_id)} shape=\"circle\" icon=\"search\" />\r\n                                            </Popover>\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <Button type=\"primary\" onClick={this.showDrawer.bind(this, item.user_id)} shape=\"circle\" icon=\"edit\" />\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <Button type=\"danger\" onClick={this.handleDelete.bind(this, item.user_id)} shape=\"circle\" icon=\"delete\" />\r\n                                        </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </React.Fragment>\r\n                                ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                <div>   \r\n          <Drawer\r\n          title=\"User Update\"\r\n          width={400}\r\n          onClose={this.onClose}\r\n          visible={visible}\r\n          >\r\n          <Form layout=\"vertical\" hideRequiredMark>\r\n            \r\n            <Row gutter={16}>\r\n            <Form.Item >\r\n                {getFieldDecorator(\"name\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your nickname!\",\r\n                        whitespace: true\r\n                    }\r\n                    ]\r\n                })(<Input\r\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                placeholder=\"User Name\"\r\n                />)\r\n                }\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                    {\r\n                        type: \"email\",\r\n                        message: \"The input is not valid E-mail!\"\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your E-mail!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Email\"\r\n                    />)}\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"salary\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your Salary Amount!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"dollar\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Salary\"\r\n                />)}\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"contact\", {\r\n                    rules: [\r\n                    { required: true, message: \"Please input your phone number!\" }\r\n                    ]\r\n                })(<Input\r\n                    prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Contact Number\" \r\n                    />)}\r\n            </Form.Item>\r\n            </Row>\r\n          </Form>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              bottom: 0,\r\n              width: '100%',\r\n              borderTop: '1px solid #e9e9e9',\r\n              padding: '10px 16px',\r\n              background: '#fff',\r\n              textAlign: 'right',\r\n            }}\r\n          >\r\n            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleUpdate} type=\"primary\">\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </Drawer>\r\n        </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n\r\nconst Dash = Form.create({name: \"dashboard\"})(Dashboard);\r\n\r\nexport default Dash;","\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Icon,\r\n  Select,\r\n  Button,\r\n  AutoComplete,\r\n  DatePicker,\r\n  Radio,\r\n  Card,\r\n  Row,\r\n  Col\r\n} from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nclass AddEmployee extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  handleWebsiteChange = value => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '86',\r\n    })(\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>,\r\n    );\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n        <Row gutter={0}>\r\n        <Col span={15}>    \r\n        <div className=\"scrollable-container-addEmployee\">       \r\n        <div className=\"background-addEmployee\">\r\n        <Card title='Add Employee' bordered={false} style={{ height: '1200px'}}>  \r\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Employee ID\">\r\n          {getFieldDecorator('id', {\r\n            rules: [{ required: true, message: 'Please input employee id!' }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"First Name\">\r\n          {getFieldDecorator('firstName', {\r\n            rules: [{ required: true, message: 'Please input first name!' }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Second Name\">\r\n          {getFieldDecorator('secondName', {\r\n            rules: [{ required: true, message: 'Please input second name!' }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Initials\">\r\n          {getFieldDecorator('initials', {\r\n            rules: [{ required: true, message: 'Please input initials!' }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Gender\">\r\n          {getFieldDecorator('gender', {\r\n            rules: [{ required: true, message: 'Please input initials!' }],\r\n          })(\r\n          <Radio.Group name=\"radiogroup\" defaultValue={1}>\r\n          <Radio value={1}>Male</Radio>\r\n          <Radio value={2}>Female</Radio>\r\n          </Radio.Group>\r\n        )}\r\n        </Form.Item>       \r\n        <Form.Item label=\"E-mail\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Residence&nbsp;\r\n              <Tooltip title=\"No, Street, City.\">\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('residence', {\r\n            rules: [{ message: 'Please input your nickname!', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n       \r\n        <Form.Item label=\"Phone Number\">\r\n          {getFieldDecorator('phone', {\r\n            rules: [{ required: true, message: 'Please input your phone number!' }],\r\n          })(<Input addonBefore={prefixSelector} style={{ width: '100%' }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Role\">\r\n          {getFieldDecorator('role', {\r\n            rules: [{ required: true, message: 'Please input employee role!' }],\r\n          })(\r\n            <Select placeholder=\"Please select a role\">\r\n              <Option value=\"supervisor\">Supervisor</Option>\r\n              <Option value=\"permenent\">Permenent</Option>\r\n              <Option value=\"probation\">Probation</Option>\r\n              <Option value=\"intern\">Intern</Option>\r\n              <Option value=\"contract\">Contract</Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>  \r\n        <Form.Item label=\"Department\">\r\n          {getFieldDecorator('department', {\r\n            rules: [{ required: true, message: 'Please input employee department!' }],\r\n          })(\r\n            <Select placeholder=\"Please select a department\">\r\n            <Option value=\"javaDev\">Java Development</Option>\r\n            <Option value=\"webDev\">Web Development</Option>\r\n            <Option value=\"mobileDev\">Mobile Development</Option>\r\n            <Option value=\"bussinessDev\">Bussiness Development</Option> \r\n            <Option value=\"ba\">Bussiness Analysis</Option>   \r\n            <Option value=\"qa\">Quality Assurance</Option>\r\n            <Option value=\"bigData\">Big Data</Option>\r\n            <Option value=\"support\">Enterprise Support</Option>\r\n            <Option value=\"finance\">Finance</Option>\r\n            <Option value=\"hr\">Human Resource</Option> \r\n          </Select>\r\n            )}\r\n        </Form.Item>  \r\n        <Form.Item label=\"Supervisor 01\">\r\n          {getFieldDecorator('supervisor1', {\r\n            rules: [{ required: true, message: 'Please input first supervisor!' }],\r\n          })(\r\n            <AutoComplete\r\n              dataSource={websiteOptions}\r\n              onChange={this.handleWebsiteChange}\r\n              placeholder=\"Enter supervisor's name\"\r\n            >\r\n              <Input />\r\n            </AutoComplete>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Supervisor 02\">\r\n          {getFieldDecorator('supervisor2', {\r\n            rules: [{ message: 'Please input second supervisor!' }],\r\n          })(\r\n            <AutoComplete\r\n              dataSource={websiteOptions}\r\n              onChange={this.handleWebsiteChange}\r\n              placeholder=\"Enter supervisor's name\"\r\n            >\r\n              <Input />\r\n            </AutoComplete>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Joined date\">\r\n          {getFieldDecorator('join', {\r\n            rules: [{ required: true, message: 'Please input join date!' }],\r\n          })(<DatePicker/>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm date\">\r\n          {getFieldDecorator('confirm', {\r\n            rules: [{ message: 'Please input confirm date!' }],\r\n          })(<DatePicker/>)}\r\n        </Form.Item>    \r\n        <Row>\r\n        <Col span={20}>  \r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{width:'100px'}}>\r\n          <Icon type=\"check-circle\" /> \r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        </Col> \r\n        <Col span={4}> \r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"danger\" htmlType=\"submit\" style={{width:'100px', float:'left'}}>\r\n          <Icon type=\"close-circle\" /> \r\n            Cancel\r\n          </Button>\r\n        </Form.Item>\r\n        </Col> \r\n        </Row>\r\n      </Form>\r\n      </Card>\r\n      </div>\r\n      </div>\r\n      </Col>\r\n      <Col span={8}>\r\n      <img height= '580px' width= '480px' alt=\"example\" src=\"https://packagetoursturkey.com/wp-content/uploads/2018/06/beach-calm-clouds-457882.jpg\" />\r\n      </Col> \r\n        </Row>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedAddEmployee = Form.create({ name: 'register' })(AddEmployee);\r\n\r\nexport default WrappedAddEmployee;\r\n          ","\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  AutoComplete,\r\n  DatePicker,\r\n  Radio,\r\n  Switch,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Icon\r\n} from 'antd';\r\n\r\nconst AutoCompleteOption = AutoComplete.Option;\r\nconst { RangePicker } = DatePicker;\r\nconst { TextArea } = Input;\r\n\r\nclass RequetLeave extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  handleWebsiteChange = value => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n        <Row gutter={0}>\r\n        <Col span={15}>    \r\n        <div className=\"scrollable-container-requestLeave\">       \r\n        <div className=\"background-requestLeave\">\r\n        <Card title='Request Leave' bordered={false}>  \r\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n\r\n        <Form.Item label=\"Leave Type\">\r\n          {getFieldDecorator('gender', {\r\n            rules: [{ required: true, message: 'Please input initials!' }],\r\n          })(\r\n          <Radio.Group name=\"radiogroup\" defaultValue={1}>\r\n          <Radio.Button value={1}>Annual</Radio.Button>\r\n          <Radio.Button value={2}>Casual</Radio.Button>\r\n          <Radio.Button value={3}>Medical</Radio.Button>\r\n          <Radio.Button value={4}>Lieu</Radio.Button> \r\n          <Radio.Button value={5}>Special</Radio.Button>\r\n          <Radio.Button value={6}>Maternity</Radio.Button>\r\n          <Radio.Button value={7}>Paternity</Radio.Button>\r\n          <Radio.Button value={8}>No Pay</Radio.Button>  \r\n          </Radio.Group>\r\n        )}\r\n        </Form.Item>  \r\n       <Form.Item label=\"Half Day\">\r\n          {getFieldDecorator('halfDay', {\r\n            rules: [{ message: 'Half Day!' }],\r\n          })(<Switch />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Leave Period\">\r\n          {getFieldDecorator('leavePeriod', {\r\n            rules: [{ required: true, message: 'Please input first name!' }],\r\n          })(<RangePicker />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Number of leave days\">\r\n          {getFieldDecorator('days', {\r\n            rules: [{ message: 'Please input second name!' }],\r\n          })(<Input style={{width: '50px'}}/>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Duties coverd by\">\r\n          {getFieldDecorator('dutiesCover', {\r\n            rules: [{ message: 'Please input initials!' }],\r\n          })(\r\n            <AutoComplete\r\n              dataSource={websiteOptions}\r\n              onChange={this.handleWebsiteChange}\r\n              placeholder=\"Enter valid employee name\"\r\n            >\r\n              <Input />\r\n            </AutoComplete>,\r\n          )}\r\n        </Form.Item>\r\n              \r\n        <Form.Item label=\"Special Notes\">\r\n          {getFieldDecorator('email', {\r\n            rules: [{\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              }],\r\n          })(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n        <Row>\r\n        <Col span={20}>  \r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{width:'100px'}}>\r\n          <Icon type=\"check-circle\" /> \r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n        </Col> \r\n        <Col span={4}> \r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"danger\" htmlType=\"submit\" style={{width:'100px', float:'left'}}>\r\n          <Icon type=\"close-circle\" /> \r\n            Cancel\r\n          </Button>\r\n        </Form.Item>\r\n        </Col> \r\n        </Row>\r\n      </Form>\r\n      </Card>\r\n      </div>\r\n      </div>\r\n      </Col>\r\n      <Col span={8}>\r\n      <img height= '580px' width= '480px' alt=\"example\" src=\"https://ec.europa.eu/jrc/sites/jrcsh/files/styles/normal-responsive/public/fotolia-92027264european-day-forest-green-forest.jpg?itok=MwdU0DK-\" />\r\n      </Col> \r\n        </Row>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRequestLeave = Form.create({ name: 'register' })(RequetLeave);\r\n\r\nexport default WrappedRequestLeave;         ","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'antd/dist/antd.css';\r\nimport { AutoComplete, Button, Descriptions, Popover, Drawer, Form, Row, Input, Icon } from 'antd';\r\nimport swal from 'sweetalert';\r\n\r\nclass PendingLeaves extends Component {\r\n    \r\n    componentWillMount(){\r\n        this.setState({\r\n            data : []\r\n        })\r\n        axios.get('http://localhost:5000/all')\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            this.setState({\r\n                data : res.data\r\n            })\r\n        }) \r\n    } \r\n\r\n    state = {\r\n        user : false,\r\n        value : '',\r\n        dataSource : [],\r\n        data : [],\r\n        filter : [],\r\n        favorites : [],\r\n        user_name : undefined,\r\n        visible : false,\r\n\r\n        name: undefined,\r\n        salary: undefined,\r\n        contact: undefined,\r\n        email: undefined\r\n    }\r\n   \r\n    showDrawer = (id) => {\r\n        this.setState({\r\n          visible: true,\r\n          id : id\r\n        });\r\n        axios.get('http://localhost:5000/search/'+id)\r\n        .then(res => {\r\n            this.setState({\r\n                name : res.data.name,\r\n                email: res.data.email,\r\n                contact: res.data.contact,\r\n                salary : res.data.salary\r\n            })\r\n            console.log(\"aaaaaaaa\",res.data)\r\n        }).catch( err => {\r\n            console.log(err)\r\n            swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n        }) \r\n      };\r\n    \r\n    onClose = () => {\r\n        this.setState({\r\n          visible: false\r\n        });\r\n    };\r\n\r\n    handleClick(id) {\r\n        axios.get('http://localhost:5000/favorites/'+id)\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            this.setState({\r\n                favorites : res.data,\r\n                user_name : res.data[0].user_name\r\n            })\r\n            console.log(this.state.user_name);\r\n        }).catch(e => {\r\n            const data = this.state.data;\r\n            for(let i=0; i<data.length;i++){\r\n                if(this.state.data[i].user_id === id){\r\n                    let user = this.state.data[i].name;\r\n                    this.setState({\r\n                        favorites : [],\r\n                        user_name : user\r\n                    })\r\n                    swal(\"Oops!\",  user+\" hasn't any favorites!!!\", \"warning\" );\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                const user = {\r\n                    name: values.name || undefined,\r\n                    email: values.email || undefined,\r\n                    contact: values.contact || undefined,\r\n                    salary: values.salary || undefined\r\n                }\r\n\r\n                if(user.name === this.state.name && user.password === this.state.password && user.salary === this.state.salary && user.email === this.state.email && user.contact === this.state.contact){\r\n                    \r\n                    swal(\"Ohhh!\",\"Didn't change any field!!!\", \"warning\");\r\n                \r\n                }else{\r\n\r\n                    axios.put('http://localhost:5000/update/'+this.state.id, user)\r\n                    .then(res => {\r\n                        console.log(\"res\", res.data);\r\n                        swal(\"Yeah!\",\"User is updated!!!\",\"success\");\r\n                        this.onClose();\r\n                        this.props.history.push('/dashboard');\r\n                    }).catch(e=>{\r\n                        console.log(\"error\", e);\r\n                        swal(\"Oops!\",\"User not updated!!!\",\"error\");\r\n                        this.onClose();\r\n                    })\r\n                }\r\n                console.log(\"state\", user);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDelete(id,e) {\r\n        e.preventDefault();\r\n        \r\n        swal({\r\n            text: \"Wanna delete that user?\",\r\n            buttons: {\r\n                confirm: \"Delete\",\r\n                cancel: true,\r\n            }\r\n        })\r\n        .then(willSearch => {\r\n            if (willSearch) {\r\n                axios.get('http://localhost:5000/delete/'+id)\r\n                .then(res => {\r\n                    swal(\"Yeah!\",res.data,\"success\"); \r\n                    this.props.history.push('/dashboard'); \r\n                }).catch( err => {\r\n                    swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onSelect = (value) => {\r\n        const data = this.state.data;\r\n        let len = data.length;\r\n        for(var i=0; i<len; i++){\r\n          var string = data[i][\"name\"];\r\n          if(value===string){\r\n            this.setState({\r\n                user : true,\r\n                filter : data[i]\r\n              });\r\n          }}\r\n        \r\n      }\r\n    \r\n      onSearch = searchText => {\r\n        const data = this.state.data;\r\n        let len = data.length;\r\n        var arr = [];\r\n        for(var i=0; i<len; i++){\r\n          var re = new RegExp(searchText, 'gi');\r\n          var string = data[i][\"name\"];\r\n          if(string.match(re)){\r\n            arr.push(string);\r\n          }}\r\n        this.setState({\r\n          dataSource: arr\r\n        });\r\n      };\r\n    \r\n      onChange = value => {\r\n        this.setState({ value });\r\n      };\r\n\r\n    render() {\r\n        const { dataSource, value, data, user, filter, favorites, user_name, visible} = this.state; \r\n        let us = user; \r\n        const { getFieldDecorator } = this.props.form;\r\n       \r\n        const text = <h6>{user_name}'s Favorites</h6>;\r\n        const content = (\r\n            \r\n            <div className=\"scrollable-container-pop\">\r\n            <div className=\"background-pop\">\r\n            {favorites.map(item => (\r\n                <React.Fragment key={item.id}>                        \r\n                   <div style={{maxWidth: \"600px\"}}>\r\n                        <Descriptions >\r\n                            <Descriptions.Item label=\"Food\">{item.food}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Drink\">{item.drink}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Animal\">{item.animal}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Bird\"> {item.bird}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Hobby\">{item.hobby}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Place\"> {item.place} </Descriptions.Item>\r\n                        </Descriptions>\r\n                        <hr/>\r\n                    </div>\r\n                </React.Fragment>\r\n            ))}\r\n            </div>\r\n            </div>\r\n        );      \r\n\r\n        return (\r\n            <div>\r\n                <AutoComplete\r\n                    value={value}\r\n                    dataSource={dataSource}\r\n                    style={{ width: 200}}\r\n                    onSelect={this.onSelect}\r\n                    onSearch={this.onSearch}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Filter Here By Name\"\r\n                    />\r\n            <div  className=\"white card z-depth-0 card-content center\">\r\n                <div className=\"scrollable-container-leave\">\r\n                <div className=\"background-fav\">\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                       <tr>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td><h6>Id</h6></td>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td><h6>Name</h6></td>\r\n                            <td><h6>Email</h6></td>\r\n                            <td><h6>Contact</h6></td>\r\n                            <td><h6> Salary</h6></td>\r\n                            <td><h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h6></td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {us && value!==''? \r\n                        <tr>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td> {filter.user_id} </td>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td> {filter.name} </td>\r\n                            <td> {filter.email} </td>\r\n                            <td> {filter.contact} </td>\r\n                            <td> {filter.salary} </td>\r\n                            <td> \r\n                                <div className=\"demo\">\r\n                                <div style={{ clear: 'both', whiteSpace: 'nowrap' }}>\r\n                                    <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                                    <Button type=\"primary\" onClick={this.handleClick.bind(this, filter.user_id)} shape=\"circle\" icon=\"search\" />\r\n                                    </Popover>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button type=\"primary\" onClick={this.showDrawer.bind(this, filter.user_id)} shape=\"circle\" icon=\"edit\" />\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button type=\"danger\" onClick={this.handleDelete.bind(this, filter.user_id)} shape=\"circle\" icon=\"delete\" />\r\n                                </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        :   data.map(item => (\r\n                            <React.Fragment key={item.user_id}>                        \r\n                                <tr>\r\n                                    <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                                    <td> {item.user_id} </td>\r\n                                    <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                                    <td> {item.name} </td>\r\n                                    <td> {item.email} </td>\r\n                                    <td> {item.contact} </td>\r\n                                    <td> {item.salary} </td>\r\n                                    <td> \r\n                                        <div className=\"demo\">\r\n                                        <div style={{ clear: 'both', whiteSpace: 'nowrap' }}>\r\n                                            <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                                            <Button type=\"primary\" onClick={this.handleClick.bind(this, item.user_id)} shape=\"circle\" icon=\"search\" />\r\n                                            </Popover>\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <Button type=\"primary\" onClick={this.showDrawer.bind(this, item.user_id)} shape=\"circle\" icon=\"edit\" />\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <Button type=\"danger\" onClick={this.handleDelete.bind(this, item.user_id)} shape=\"circle\" icon=\"delete\" />\r\n                                        </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </React.Fragment>\r\n                                ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                <div>   \r\n          <Drawer\r\n          title=\"User Update\"\r\n          width={400}\r\n          onClose={this.onClose}\r\n          visible={visible}\r\n          >\r\n          <Form layout=\"vertical\" hideRequiredMark>\r\n            \r\n            <Row gutter={16}>\r\n            <Form.Item >\r\n                {getFieldDecorator(\"name\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your nickname!\",\r\n                        whitespace: true\r\n                    }\r\n                    ]\r\n                })(<Input\r\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                placeholder=\"User Name\"\r\n                />)\r\n                }\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                    {\r\n                        type: \"email\",\r\n                        message: \"The input is not valid E-mail!\"\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your E-mail!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Email\"\r\n                    />)}\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"salary\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your Salary Amount!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"dollar\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Salary\"\r\n                />)}\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"contact\", {\r\n                    rules: [\r\n                    { required: true, message: \"Please input your phone number!\" }\r\n                    ]\r\n                })(<Input\r\n                    prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Contact Number\" \r\n                    />)}\r\n            </Form.Item>\r\n            </Row>\r\n          </Form>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              bottom: 0,\r\n              width: '100%',\r\n              borderTop: '1px solid #e9e9e9',\r\n              padding: '10px 16px',\r\n              background: '#fff',\r\n              textAlign: 'right',\r\n            }}\r\n          >\r\n            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleUpdate} type=\"primary\">\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </Drawer>\r\n        </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n\r\nconst wrappedPendingLeaves = Form.create({name: \"dashboard\"})(PendingLeaves);\r\n\r\nexport default wrappedPendingLeaves;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'antd/dist/antd.css';\r\nimport { AutoComplete, Button, Descriptions, Popover, Drawer, Form, Row, Input, Icon } from 'antd';\r\nimport swal from 'sweetalert';\r\n\r\nclass ViewEmployee extends Component {\r\n    \r\n    componentWillMount(){\r\n        this.setState({\r\n            data : []\r\n        })\r\n        axios.get('http://localhost:5000/all')\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            this.setState({\r\n                data : res.data\r\n            })\r\n        }) \r\n    } \r\n\r\n    state = {\r\n        user : false,\r\n        value : '',\r\n        dataSource : [],\r\n        data : [],\r\n        filter : [],\r\n        favorites : [],\r\n        user_name : undefined,\r\n        visible : false,\r\n\r\n        name: undefined,\r\n        salary: undefined,\r\n        contact: undefined,\r\n        email: undefined\r\n    }\r\n   \r\n    showDrawer = (id) => {\r\n        this.setState({\r\n          visible: true,\r\n          id : id\r\n        });\r\n        axios.get('http://localhost:5000/search/'+id)\r\n        .then(res => {\r\n            this.setState({\r\n                name : res.data.name,\r\n                email: res.data.email,\r\n                contact: res.data.contact,\r\n                salary : res.data.salary\r\n            })\r\n            console.log(\"aaaaaaaa\",res.data)\r\n        }).catch( err => {\r\n            console.log(err)\r\n            swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n        }) \r\n      };\r\n    \r\n    onClose = () => {\r\n        this.setState({\r\n          visible: false\r\n        });\r\n    };\r\n\r\n    handleClick(id) {\r\n        axios.get('http://localhost:5000/favorites/'+id)\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            this.setState({\r\n                favorites : res.data,\r\n                user_name : res.data[0].user_name\r\n            })\r\n            console.log(this.state.user_name);\r\n        }).catch(e => {\r\n            const data = this.state.data;\r\n            for(let i=0; i<data.length;i++){\r\n                if(this.state.data[i].user_id === id){\r\n                    let user = this.state.data[i].name;\r\n                    this.setState({\r\n                        favorites : [],\r\n                        user_name : user\r\n                    })\r\n                    swal(\"Oops!\",  user+\" hasn't any favorites!!!\", \"warning\" );\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                const user = {\r\n                    name: values.name || undefined,\r\n                    email: values.email || undefined,\r\n                    contact: values.contact || undefined,\r\n                    salary: values.salary || undefined\r\n                }\r\n\r\n                if(user.name === this.state.name && user.password === this.state.password && user.salary === this.state.salary && user.email === this.state.email && user.contact === this.state.contact){\r\n                    \r\n                    swal(\"Ohhh!\",\"Didn't change any field!!!\", \"warning\");\r\n                \r\n                }else{\r\n\r\n                    axios.put('http://localhost:5000/update/'+this.state.id, user)\r\n                    .then(res => {\r\n                        console.log(\"res\", res.data);\r\n                        swal(\"Yeah!\",\"User is updated!!!\",\"success\");\r\n                        this.onClose();\r\n                        this.props.history.push('/dashboard');\r\n                    }).catch(e=>{\r\n                        console.log(\"error\", e);\r\n                        swal(\"Oops!\",\"User not updated!!!\",\"error\");\r\n                        this.onClose();\r\n                    })\r\n                }\r\n                console.log(\"state\", user);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleDelete(id,e) {\r\n        e.preventDefault();\r\n        \r\n        swal({\r\n            text: \"Wanna delete that user?\",\r\n            buttons: {\r\n                confirm: \"Delete\",\r\n                cancel: true,\r\n            }\r\n        })\r\n        .then(willSearch => {\r\n            if (willSearch) {\r\n                axios.get('http://localhost:5000/delete/'+id)\r\n                .then(res => {\r\n                    swal(\"Yeah!\",res.data,\"success\"); \r\n                    this.props.history.push('/dashboard'); \r\n                }).catch( err => {\r\n                    swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    onSelect = (value) => {\r\n        const data = this.state.data;\r\n        let len = data.length;\r\n        for(var i=0; i<len; i++){\r\n          var string = data[i][\"name\"];\r\n          if(value===string){\r\n            this.setState({\r\n                user : true,\r\n                filter : data[i]\r\n              });\r\n          }}\r\n        \r\n      }\r\n    \r\n      onSearch = searchText => {\r\n        const data = this.state.data;\r\n        let len = data.length;\r\n        var arr = [];\r\n        for(var i=0; i<len; i++){\r\n          var re = new RegExp(searchText, 'gi');\r\n          var string = data[i][\"name\"];\r\n          if(string.match(re)){\r\n            arr.push(string);\r\n          }}\r\n        this.setState({\r\n          dataSource: arr\r\n        });\r\n      };\r\n    \r\n      onChange = value => {\r\n        this.setState({ value });\r\n      };\r\n\r\n    render() {\r\n        const { dataSource, value, data, user, filter, favorites, user_name, visible} = this.state; \r\n        let us = user; \r\n        const { getFieldDecorator } = this.props.form;\r\n       \r\n        const text = <h6>{user_name}'s Favorites</h6>;\r\n        const content = (\r\n            \r\n            <div className=\"scrollable-container-pop\">\r\n            <div className=\"background-pop\">\r\n            {favorites.map(item => (\r\n                <React.Fragment key={item.id}>                        \r\n                   <div style={{maxWidth: \"600px\"}}>\r\n                        <Descriptions >\r\n                            <Descriptions.Item label=\"Food\">{item.food}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Drink\">{item.drink}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Animal\">{item.animal}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Bird\"> {item.bird}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Hobby\">{item.hobby}</Descriptions.Item>\r\n                            <Descriptions.Item label=\"Place\"> {item.place} </Descriptions.Item>\r\n                        </Descriptions>\r\n                        <hr/>\r\n                    </div>\r\n                </React.Fragment>\r\n            ))}\r\n            </div>\r\n            </div>\r\n        );      \r\n\r\n        return (\r\n            <div>\r\n                <AutoComplete\r\n                    value={value}\r\n                    dataSource={dataSource}\r\n                    style={{ width: 200}}\r\n                    onSelect={this.onSelect}\r\n                    onSearch={this.onSearch}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Filter Here By Name\"\r\n                    />\r\n            <div  className=\"white card z-depth-0 card-content center\">\r\n                <div className=\"scrollable-container-leave\">\r\n                <div className=\"background-fav\">\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                       <tr>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td><h6>Id</h6></td>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td><h6>Name</h6></td>\r\n                            <td><h6>Email</h6></td>\r\n                            <td><h6>Contact</h6></td>\r\n                            <td><h6> Salary</h6></td>\r\n                            <td><h6>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h6></td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {us && value!==''? \r\n                        <tr>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td> {filter.user_id} </td>\r\n                            <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                            <td> {filter.name} </td>\r\n                            <td> {filter.email} </td>\r\n                            <td> {filter.contact} </td>\r\n                            <td> {filter.salary} </td>\r\n                            <td> \r\n                                <div className=\"demo\">\r\n                                <div style={{ clear: 'both', whiteSpace: 'nowrap' }}>\r\n                                    <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                                    <Button type=\"primary\" onClick={this.handleClick.bind(this, filter.user_id)} shape=\"circle\" icon=\"search\" />\r\n                                    </Popover>\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button type=\"primary\" onClick={this.showDrawer.bind(this, filter.user_id)} shape=\"circle\" icon=\"edit\" />\r\n                                    &nbsp;&nbsp;&nbsp;\r\n                                    <Button type=\"danger\" onClick={this.handleDelete.bind(this, filter.user_id)} shape=\"circle\" icon=\"delete\" />\r\n                                </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        :   data.map(item => (\r\n                            <React.Fragment key={item.user_id}>                        \r\n                                <tr>\r\n                                    <td> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                                    <td> {item.user_id} </td>\r\n                                    <td> &nbsp;&nbsp;&nbsp;&nbsp; </td>\r\n                                    <td> {item.name} </td>\r\n                                    <td> {item.email} </td>\r\n                                    <td> {item.contact} </td>\r\n                                    <td> {item.salary} </td>\r\n                                    <td> \r\n                                        <div className=\"demo\">\r\n                                        <div style={{ clear: 'both', whiteSpace: 'nowrap' }}>\r\n                                            <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"click\">\r\n                                            <Button type=\"primary\" onClick={this.handleClick.bind(this, item.user_id)} shape=\"circle\" icon=\"search\" />\r\n                                            </Popover>\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <Button type=\"primary\" onClick={this.showDrawer.bind(this, item.user_id)} shape=\"circle\" icon=\"edit\" />\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <Button type=\"danger\" onClick={this.handleDelete.bind(this, item.user_id)} shape=\"circle\" icon=\"delete\" />\r\n                                        </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </React.Fragment>\r\n                                ))\r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                </div>\r\n                <div>   \r\n          <Drawer\r\n          title=\"User Update\"\r\n          width={400}\r\n          onClose={this.onClose}\r\n          visible={visible}\r\n          >\r\n          <Form layout=\"vertical\" hideRequiredMark>\r\n            \r\n            <Row gutter={16}>\r\n            <Form.Item >\r\n                {getFieldDecorator(\"name\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your nickname!\",\r\n                        whitespace: true\r\n                    }\r\n                    ]\r\n                })(<Input\r\n                prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                placeholder=\"User Name\"\r\n                />)\r\n                }\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                    {\r\n                        type: \"email\",\r\n                        message: \"The input is not valid E-mail!\"\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your E-mail!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Email\"\r\n                    />)}\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"salary\", {\r\n                    rules: [\r\n                    {\r\n                        required: true,\r\n                        message: \"Please input your Salary Amount!\"\r\n                    }\r\n                    ]\r\n                })(<Input \r\n                    prefix={<Icon type=\"dollar\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Salary\"\r\n                />)}\r\n            </Form.Item>\r\n            </Row>\r\n            <Row gutter={16}>\r\n            <Form.Item>\r\n                {getFieldDecorator(\"contact\", {\r\n                    rules: [\r\n                    { required: true, message: \"Please input your phone number!\" }\r\n                    ]\r\n                })(<Input\r\n                    prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    placeholder=\"Contact Number\" \r\n                    />)}\r\n            </Form.Item>\r\n            </Row>\r\n          </Form>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              bottom: 0,\r\n              width: '100%',\r\n              borderTop: '1px solid #e9e9e9',\r\n              padding: '10px 16px',\r\n              background: '#fff',\r\n              textAlign: 'right',\r\n            }}\r\n          >\r\n            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleUpdate} type=\"primary\">\r\n              Update\r\n            </Button>\r\n          </div>\r\n        </Drawer>\r\n        </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}    \r\n\r\nconst wrappedViewEmployee = Form.create({name: \"dashboard\"})(ViewEmployee);\r\n\r\nexport default wrappedViewEmployee;","import React, { Component } from 'react';\r\nimport Pdf from \"react-to-pdf\";\r\nimport \"./index.css\";\r\nimport {Button, Descriptions} from 'antd';\r\nimport axios from 'axios'; \r\nimport swal from 'sweetalert';\r\n\r\nconst ref = React.createRef();\r\nconst loginStyle = {\r\n    maxHeight: '440px',\r\n    width: \"90%\",\r\n    maxWidth: \"900px\",\r\n    margin: \"30px auto\",\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"5px\",\r\n    paddingLeft: \"60px\",\r\n    float: 'center'\r\n}\r\n\r\nexport default class Pdfs extends Component {\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/search/'+this.state.id)\r\n        .then(res => {\r\n            this.setState({\r\n                data : res.data\r\n            })\r\n            console.log(\"aaa\", this.state.data);\r\n        }).catch( err => {\r\n            console.log(err)\r\n            swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n        }) \r\n        \r\n        // axios.get('http://localhost:5000/searchfavo/'+this.state.id)\r\n        // .then(res => {\r\n        //     this.setState({\r\n        //         favorite : res.data\r\n        //     })\r\n        // }).catch( err => {\r\n        //     console.log(err)\r\n        //     swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");\r\n        // }) \r\n    }\r\n\r\n    state = {\r\n        data: [],\r\n        favorite: [],\r\n        id: localStorage.getItem(\"id\")\r\n    } \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div style={{float: 'right'}}>\r\n                <Pdf x = '0' y = '0' targetRef={ref} filename=\"User Details.pdf\">\r\n                    {({ toPdf }) => <Button  type=\"primary\" onClick={toPdf} shape=\"circle\" icon=\"download\" />}\r\n                </Pdf>\r\n                </div>\r\n                <br/>\r\n                <div style={loginStyle} ref={ref} className=\"white\">\r\n                <div className=\"scrollable-container-pdf\">\r\n                <div className=\"background\">\r\n                    <br/>\r\n                    <img float= 'right' height= '50px' alt=\"example\" src=\"https://rakiya.lk/files/recruiters/1805/logo.png\" />\r\n                    <br/>\r\n                    <br/>\r\n                    <Descriptions style={{maxWidth: '400px'}} title=\"User Info\" bordered>\r\n                       \r\n                        <Descriptions.Item label=\"Id\" span={4}>\r\n                            {this.state.data.user_id}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Name\" span={4}>\r\n                            {this.state.data.name}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Email\" span={5}>\r\n                            {this.state.data.email}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Contact\" span={6}>\r\n                            {this.state.data.contact}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Salary\">\r\n                            {this.state.data.salary}\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// <h5>Your details </h5>\r\n//                         <br/>\r\n//                         <h6>Id:</h6> <input id=\"id\" type=\"text\" value = {this.state.data.user_id} /> \r\n//                         <h6>Name:</h6> <input id=\"id\" type=\"text\" value = {this.state.data.name} /> \r\n//                         <h6>Email</h6> <input id=\"id\" type=\"text\" value = {this.state.data.email} /> \r\n//                         <h6>Contact: </h6> <input id=\"id\" type=\"text\" value = {this.state.data.contact} /> \r\n//                         <h6>Salary Amount:</h6> <input id=\"id\" type=\"text\" value = {this.state.data.salary} /> \r\n//                         <h6>Favorite Food:</h6> <input id=\"id\" type=\"text\" value = {this.state.favorite.food} /> \r\n//                         <h6>Favorite Drink:</h6> <input id=\"id\" type=\"text\" value = {this.state.favorite.drink} /> \r\n//                         <h6>Favorite Animal:</h6> <input id=\"id\" type=\"text\" value = {this.state.favorite.animal} /> \r\n//                         <h6>Favorite Bird:</h6> <input id=\"id\" type=\"text\" value = {this.state.favorite.bird} /> \r\n//                         <h6>Favorite Hobby:</h6> <input id=\"id\" type=\"text\" value = {this.state.favorite.hobby} /> \r\n//                         <h6>Favorite Place:</h6> <input id=\"id\" type=\"text\" value = {this.state.favorite.place} /> ","\r\nimport React from 'react';\r\nimport { Link, Switch, Route } from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Layout, Menu, Icon, Dropdown, Avatar, Drawer, Form, Button, Row, Input } from 'antd';\r\n//import Signup from '../auth/Signup';\r\nimport Login from '../auth/Login';\r\nimport Dashboard from './Dashboard';\r\nimport Profile from './Profile';\r\nimport Details from '../components/Employee/Details';\r\nimport LeavesHistory from '../components/Leave/ReadLeaves';\r\nimport AddEmployee from '../components/Employee/AddEmployee';\r\nimport RequetLeave from '../components/Leave/RequetLeave';\r\nimport PendingLeaves from '../components/Leave/PendingLeaves';\r\nimport ViewEmployee from '../components/Employee/ViewEmployee';\r\nimport Pdf from './Pdfs';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass SiderDemo extends React.Component {\r\n  \r\n  state = {\r\n    collapsed: false,\r\n    redirectToReferrer: false,\r\n    visible: false\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n  \r\n  handleClick = () => {\r\n    this.setState({redirectToReferrer: true});\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  changePassword = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n\r\n        var passwordHash = require('password-hash');\r\n        var hashedPassword = passwordHash.generate(values.newpassword);\r\n        const user_id = localStorage.getItem(\"id\");\r\n\r\n        axios.get('http://localhost:5000/change/'+user_id)\r\n        .then(res => {\r\n            if(passwordHash.verify(values.password, res.data.password)){\r\n              const user = {\r\n                user_id : user_id || undefined,\r\n                password: hashedPassword || undefined\r\n              }\r\n              axios.post('http://localhost:5000/changepassword',user)\r\n              .then(res => {\r\n                if(res.data){\r\n                  swal(\"Yeah!\",\"Password Updated !!!\",\"success\");\r\n                  this.setState({\r\n                    visible: false\r\n                  });\r\n                }\r\n                else{\r\n                  swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\"); \r\n                }\r\n              }).catch(e => console.log(\"eeeeeeeeeeee\",e))\r\n            }\r\n            else{\r\n              swal(\"Oops!\",\"Invalid Current Password !!!\",\"warning\");\r\n            }\r\n        }).catch(e => {\r\n            console.log(\"eeeeeeeeeeee\",e)\r\n            swal(\"Oops!\",\"Something Went Wrong!!!\",\"error\");          \r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue(\"newpassword\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const {redirectToReferrer, visible} = this.state;\r\n    const { getFieldDecorator } = this.props.form;\r\n    const menu = (\r\n      <Menu>\r\n        <Menu.Item onClick={this.showDrawer}>\r\n          Change Password\r\n        </Menu.Item>\r\n        <Menu.Item onClick={this.handleClick}>\r\n          Log Out\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n    const user = localStorage.getItem(\"user\");\r\n    if (redirectToReferrer) {\r\n      return (<Login/>)\r\n    }\r\n    else{\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider \r\n          collapsible collapsed={this.state.collapsed} \r\n          onCollapse={this.onCollapse}\r\n        >\r\n          <div className=\"logo\" >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <img height= '35px' alt=\"example\" src=\"https://rakiya.lk/files/recruiters/1805/logo.png\" />\r\n          </div>\r\n          <br/>\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            \r\n            <Menu.Item key=\"1\">\r\n              <Link to='/dashboard'/>\r\n              <Icon type=\"home\" />\r\n              <span>Home</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n                <Link to='/add_employee'/>\r\n                <Icon type=\"user-add\" />\r\n                <span>Add Employee</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"13\">\r\n                <Link to='/add_employee'/>\r\n                <Icon type=\"user-add\" />\r\n                <span>Manage Employee</span>\r\n            </Menu.Item>\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              title={\r\n                <span>\r\n                  <Icon type=\"export\" />\r\n                  <span>Leave</span>\r\n                </span>\r\n              }\r\n            >\r\n            <Menu.Item key=\"3\">\r\n                <Link to='/request_leave'/>\r\n                <Icon type=\"paper-clip\" />\r\n                <span>Request Leave</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\">\r\n                <Link to='/leave_history'/>\r\n                <Icon type=\"folder\" />\r\n                <span>Leaves History</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\">\r\n                <Link to='/pending_leaves'/>\r\n                <Icon type=\"question-circle\" />\r\n                <span>Pending Leaves</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"14\">\r\n                <Link to='/pending_leaves'/>\r\n                <Icon type=\"file-protect\" />\r\n                <span>Leave Policy</span>\r\n            </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"6\">\r\n                <Link to='/view_employee'/>\r\n                <Icon type=\"team\" />\r\n                <span>View Profiles</span>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"7\">\r\n              <Link to='/pdf'/>\r\n              <Icon type=\"download\" />\r\n              <span>Download Details</span>\r\n            </Menu.Item>\r\n            <SubMenu\r\n              key=\"sub2\"\r\n              title={\r\n                <span>\r\n                  <Icon type=\"setting\" />\r\n                  <span>Settings</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"8\">\r\n                <Link to='/update'/>\r\n                <Icon type=\"phone\" />\r\n                <span>Contact Numbers</span>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"9\">\r\n                <Link to='/delete'/>\r\n                <Icon type=\"lock\" />\r\n                <span>Change Password</span>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"11\">\r\n                <Link to='/calendar'/>\r\n                <Icon type=\"calendar\" />\r\n                <span>Leave Calendar</span>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"12\">\r\n                <Link to='/delete'/>\r\n                <Icon type=\"solution\" />\r\n                <span>Attendence Sheet</span>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ background: 'gray', padding: '0px'}} >\r\n            <nav className=\"\" style={{backgroundColor:\"#00183A\", height: '80px'}}>\r\n            <div>\r\n              \r\n            <h5 className=\"brand-logo center\" style={{paddingTop:'20px'}}>VX Leave Management System</h5>\r\n            </div>\r\n            <ul className=\"right\" style={{paddingTop:'10px'}}>\r\n              <li>\r\n              <Avatar style={{ backgroundColor: '#FD6A02', verticalAlign: 'middle' }} size=\"large\">\r\n                {user}\r\n              </Avatar>\r\n              </li>\r\n              <li>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;\r\n              </li>\r\n              <li>\r\n                <Dropdown overlay={menu} placement=\"bottomRight\">\r\n                  <Icon type=\"menu\" />  \r\n                </Dropdown>&nbsp;&nbsp;&nbsp;&nbsp;\r\n              </li>\r\n            </ul>\r\n            </nav>\r\n          </Header>\r\n          <Content style={{ margin: '20px', paddingTop: '20PX' }}>\r\n              <Switch>\r\n                <Route path='/profile' component={Profile} />\r\n                <Route path='/details' component={Details} />\r\n                <Route path='/leave_history' component={LeavesHistory} />\r\n                <Route path='/pdf' component={Pdf} />\r\n                <Route exact path='/' component={Dashboard} />\r\n                <Route path='/dashboard' component={Dashboard} />\r\n                <Route path='/add_employee' component={AddEmployee} />\r\n                <Route path='/request_leave' component={RequetLeave} />\r\n                <Route path='/pending_leaves' component={PendingLeaves} />\r\n                <Route path='/view_employee' component={ViewEmployee} />\r\n              </Switch>\r\n            <div>\r\n          <Drawer\r\n          title=\"Change Password\"\r\n          width={300}\r\n          onClose={this.onClose}\r\n          visible={visible}\r\n          >\r\n          <Form layout=\"vertical\" hideRequiredMark>\r\n            \r\n            <Row gutter={16}>\r\n              <Form.Item hasFeedback>\r\n                {getFieldDecorator(\"password\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your current password!\"\r\n                    },\r\n                    {\r\n                      validator: this.validateToNextPassword\r\n                    }\r\n                  ]\r\n                })(<Input.Password \r\n                  id= '1'\r\n                  prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                  placeholder=\"Current Password\"\r\n                  />)}\r\n              </Form.Item>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n              <Form.Item hasFeedback>\r\n                {getFieldDecorator(\"newpassword\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your new password!\"\r\n                    },\r\n                    {\r\n                      validator: this.validateToNextPassword\r\n                    }\r\n                  ]\r\n                })(<Input.Password \r\n                  id= '2'\r\n                  prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                  placeholder=\"New Password\"\r\n                  />)}\r\n              </Form.Item>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n            \r\n              <Form.Item hasFeedback>\r\n                {getFieldDecorator(\"confirm\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please confirm your new password!\"\r\n                    },\r\n                    {\r\n                      validator: this.compareToFirstPassword\r\n                    }\r\n                  ]\r\n                })(<Input.Password \r\n                  id= '3'\r\n                  onBlur={this.handleConfirmBlur}\r\n                  prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                  placeholder=\"Confirm Password\"\r\n                />)}\r\n              </Form.Item>\r\n            </Row>\r\n          </Form>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              bottom: 0,\r\n              width: '100%',\r\n              borderTop: '1px solid #e9e9e9',\r\n              padding: '10px 16px',\r\n              background: '#fff',\r\n              textAlign: 'right',\r\n            }}\r\n          >\r\n            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.changePassword} type=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Drawer>\r\n        </div>\r\n          </Content>\r\n          \r\n          <Footer style={{ textAlign: 'center', height: '0px'}}>VX Leave Management System ©2019 Created by Pramuditha</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );}\r\n  }\r\n}\r\n\r\nconst Main = Form.create()(SiderDemo);\r\n\r\nexport default Main;\r\n\r\n// <Menu.Item key=\"2\">\r\n// <Link to='/signup'/>\r\n// <Icon type=\"plus-circle\" />\r\n// <span> Create </span>\r\n// </Menu.Item>   \r\n/* <Breadcrumb style={{ margin: '16px 0' }}>\r\n              <Breadcrumb.Item>User</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n            </Breadcrumb>        */","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport { Form, Icon, Input, Button, Checkbox, Card, Row, Col } from 'antd';\r\nimport Sidebar from '../container/Sidebar';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  \r\n  state = {\r\n    redirectToReferrer: false\r\n  }\r\n\r\n  handleLogin = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      const user = {\r\n        name: values.username || undefined\r\n      }\r\n      if (!err) {\r\n        console.log('Received values of form: ', user);\r\n        axios.post('http://localhost:5000/login', user)\r\n        .then(res => {\r\n          console.log(\"res\", res.data)\r\n          \r\n          var passwordHash = require('password-hash');\r\n          \r\n          if(passwordHash.verify(values.password, res.data.password)){\r\n            swal(\"Yeah!\",\"User logging successfully!!!\",\"success\");\r\n            localStorage.setItem(\"id\", res.data.user_id);\r\n            localStorage.setItem(\"user\", user.name);\r\n            this.setState({redirectToReferrer: true});\r\n          }else{\r\n            swal(\"Oops!\",\"Invalid password!!!\",\"error\");\r\n          }\r\n          \r\n        }).catch(e => {\r\n          swal(\"Oops!\",\"User doesn't exist!!!\",\"error\");\r\n          window.location.reload();\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {redirectToReferrer} = this.state\r\n    if (redirectToReferrer) {\r\n      return (<Sidebar/>)\r\n    }\r\n      \r\n    const { getFieldDecorator } = this.props.form;\r\n    \r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 20 },\r\n      },\r\n    };\r\n\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 16,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div style={{ background: '#ECECEC', padding: '150px', height: '760px' }}>\r\n        <Row gutter={0}>\r\n          <Col span={14}>\r\n          <img height= '500px' alt=\"example\" src=\"https://vitamin-resource.com/wp-content/uploads/2012/05/computer-users.jpg\" />\r\n          </Col> \r\n          <Col span={10}>\r\n          <Card title=\"Login Here\" bordered={false} style={{ width: 400, height: '500px'}}>\r\n        \r\n        <Form  {...formItemLayout} className=\"login-form\">\r\n          <br/>\r\n          <Form.Item>\r\n            {getFieldDecorator('username', {\r\n              rules: [{ required: true, message: 'Please input your username!' }],\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                placeholder=\"Username\"\r\n              />,\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator('password', {\r\n              rules: [{ required: true, message: 'Please input your Password!' }],\r\n            })(\r\n              <Input.Password\r\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />,\r\n            )}\r\n          </Form.Item>\r\n          <br/>\r\n          <Form.Item {...tailFormItemLayout}>\r\n          {getFieldDecorator('remember', {\r\n              valuePropName: 'checked',\r\n              initialValue: false,\r\n            })(<Checkbox className='box'>Remember me</Checkbox>)}\r\n            <Link className=\"login-form-forgot\" to='/signup'>Forgot Password</Link>\r\n            <Button onClick={this.handleLogin} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              Log in\r\n            </Button><br/>\r\n            Or <Link to='/register'>Register Now!!!</Link>\r\n          </Form.Item>\r\n        </Form>\r\n        </Card>\r\n          </Col> \r\n        </Row>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm","import React from \"react\";\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Icon,\r\n  Button,\r\n  Card\r\n} from \"antd\";\r\n\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: []\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        var passwordHash = require('password-hash');\r\n        var hashedPassword = passwordHash.generate(values.password);\r\n        console.log(hashedPassword);\r\n        const user = {\r\n            name: values.name || undefined,\r\n            email: values.email || undefined,\r\n            password: hashedPassword || undefined,\r\n            salary: values.salary || undefined,\r\n            contact: values.contact || undefined\r\n        }\r\n        axios.post('http://localhost:5000/signup', user)\r\n        .then(res => {\r\n            console.log(\"res\", res.data);\r\n            swal(\"OMG!\",\"User created successfully!!!\",\"success\");\r\n            this.props.history.push('/');\r\n        }).catch(e => console.log(\"eeeeeeeeeeee\",e));\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ background: '#ECECEC', padding: '50px', height: '760px' }}>\r\n          <div style={{float: 'left', height: '800px', paddingLeft: '80px'}}>\r\n        <img height= '650px' alt=\"example\" src=\"https://ds.ecisolutions.com/pixere.com/EciHorizon/completebusiness/live/images/office-furniture.jpg\" />\r\n      </div>\r\n      <div style={{float: 'right', paddingRight: '130px'}}>\r\n      <Card title=\"Register Here\" bordered={false} style={{ width: 500, height: '650px'}}>\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item >\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your nickname!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"User Name\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"email\", {\r\n            rules: [\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\"\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\"\r\n              }\r\n            ]\r\n          })(<Input \r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Email\"\r\n            />)}\r\n        </Form.Item>\r\n        <Form.Item hasFeedback>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your password!\"\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword\r\n              }\r\n            ]\r\n          })(<Input.Password \r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Password\"\r\n            />)}\r\n        </Form.Item>\r\n        <Form.Item hasFeedback>\r\n          {getFieldDecorator(\"confirm\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\"\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword\r\n              }\r\n            ]\r\n          })(<Input.Password onBlur={this.handleConfirmBlur}\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Confirm Password\"\r\n          />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"salary\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your Salary Amount!\"\r\n              }\r\n            ]\r\n          })(<Input \r\n            prefix={<Icon type=\"dollar\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Salary\"\r\n          />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"contact\", {\r\n            rules: [\r\n              { required: true, message: \"Please input your phone number!\" }\r\n            ]\r\n          })(<Input\r\n            prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Contact Number\" \r\n            />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button onClick={this.handleSubmit} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Register\r\n          </Button>\r\n          <a href='/'>Login Now!!!</a>\r\n        </Form.Item>\r\n      </Form>\r\n      </Card>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: \"register\" })(\r\n  RegistrationForm\r\n);\r\n\r\n\r\nexport default WrappedRegistrationForm;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from './auth/Login';\r\nimport Register from './auth/Register';\r\n//import Confetti from 'react-confetti';\r\n  \r\nclass App extends Component {\r\n  \r\n    render(){\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path='/register' component={Register} /> \r\n            <Route path='/' component={Login} /> \r\n          </Switch>       \r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//<Confetti width=\"1510px\" height=\"750px\"/> ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n//import { BrowserRouter, Route } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>\n    , document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}