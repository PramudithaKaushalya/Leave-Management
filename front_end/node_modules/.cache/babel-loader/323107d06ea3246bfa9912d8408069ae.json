{"ast":null,"code":"import _classCallCheck from \"/home/pramuditha/Desktop/VX Leave/front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pramuditha/Desktop/VX Leave/front_end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pramuditha/Desktop/VX Leave/front_end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pramuditha/Desktop/VX Leave/front_end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pramuditha/Desktop/VX Leave/front_end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pramuditha/Desktop/VX Leave/front_end/src/auth/Forgot.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Icon, Form, Button, Input, Card, message } from 'antd';\nimport axios from '../config/axios';\n\nvar Forgot =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forgot, _React$Component);\n\n  function Forgot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Forgot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Forgot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      button: \"Send\",\n      email: null\n    };\n\n    _this.changePassword = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        var passwords = {\n          email: _this.state.email,\n          currentPassword: values.code,\n          newPassword: values.newPassword\n        };\n\n        if (!err) {\n          axios.post('api/auth/forgot_password', passwords, {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem(\"header\")\n            }\n          }).then(function (res) {\n            if (res.data.success === true) {\n              message.success(re);\n\n              _this.props.form.resetFields();\n            } else {\n              message.error(\"Confirm code not match!\");\n            }\n          }).catch(function (e) {\n            console.log(e);\n            message.error(\"Something went wrong!\");\n          });\n        }\n      });\n    };\n\n    _this.setEmail = function (value) {\n      _this.setState({\n        email: value.target.value\n      });\n    };\n\n    _this.sendCode = function () {\n      if (_this.state.email != null) {\n        _this.setState({\n          button: \"Sending...\"\n        });\n\n        var user = {\n          usernameOrEmail: _this.state.email\n        };\n        axios.post('api/auth/forgot', user).then(function (res) {\n          if (res.data.success === true) {\n            message.success(res.data.message);\n\n            _this.setState({\n              button: \"Send Again\"\n            });\n          } else {\n            message.error(res.data.message);\n          }\n        }).catch(function (e) {\n          message.error(\"Something went wrong\");\n        });\n      }\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue(\"newPassword\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(Forgot, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Forgot Password\",\n        bordered: false,\n        style: {\n          width: '500px',\n          height: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"mail\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }),\n        placeholder: \"Your Email\",\n        style: {\n          width: \"300px\"\n        },\n        onChange: this.setEmail,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.sendCode,\n        style: {\n          width: '120px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.button))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Form, Object.assign({}, formItemLayout, {\n        layout: \"vertical\",\n        style: {\n          width: '650px'\n        },\n        hideRequiredMark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, getFieldDecorator('code', {\n        rules: [{\n          required: true,\n          len: 4,\n          message: 'Please input valid number!'\n        }]\n      })(React.createElement(Input, {\n        id: \"1\",\n        prefix: React.createElement(Icon, {\n          type: \"key\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }),\n        placeholder: \"Confirm Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, getFieldDecorator(\"newPassword\", {\n        rules: [{\n          required: true,\n          message: \"Please input your new password!\"\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input.Password, {\n        id: \"2\",\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }),\n        placeholder: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, getFieldDecorator(\"confirm\", {\n        rules: [{\n          required: true,\n          message: \"Please confirm your new password!\"\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input.Password, {\n        id: \"3\",\n        onBlur: this.handleConfirmBlur,\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }),\n        placeholder: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.changePassword,\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Reset Password\"), React.createElement(Link, {\n        className: \"login-form-forgot\",\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Log in\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Forgot;\n}(React.Component);\n\nvar WrappedForgotPassword = Form.create({\n  name: 'register'\n})(Forgot);\nexport default WrappedForgotPassword;","map":{"version":3,"sources":["/home/pramuditha/Desktop/VX Leave/front_end/src/auth/Forgot.js"],"names":["React","Link","Icon","Form","Button","Input","Card","message","axios","Forgot","state","confirmDirty","button","email","changePassword","e","preventDefault","props","form","validateFieldsAndScroll","err","values","passwords","currentPassword","code","newPassword","post","headers","Authorization","localStorage","getItem","then","res","data","success","re","resetFields","error","catch","console","log","setEmail","value","setState","target","sendCode","user","usernameOrEmail","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","width","height","color","rules","required","len","validator","Component","WrappedForgotPassword","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon, Form, Button, Input, Card, message } from 'antd';\r\nimport axios from '../config/axios'\r\n\r\nclass Forgot extends React.Component {\r\n\r\n    state = {\r\n        confirmDirty: false,\r\n        button: \"Send\",\r\n        email: null\r\n    }\r\n\r\n    changePassword = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n          const passwords = {\r\n            email: this.state.email,  \r\n            currentPassword : values.code,\r\n            newPassword : values.newPassword\r\n          }\r\n\r\n          if (!err) {\r\n            axios.post('api/auth/forgot_password', \r\n            passwords,\r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"header\")\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(res.data.success === true){\r\n                  message.success(re);\r\n                  this.props.form.resetFields(); \r\n                }  else{\r\n                  message.error(\"Confirm code not match!\"); \r\n                }\r\n            }).catch(e => {\r\n              console.log(e);\r\n              message.error(\"Something went wrong!\"); \r\n            })\r\n            \r\n          }\r\n        });\r\n    }\r\n    \r\n    setEmail = (value) => {\r\n        this.setState({email: value.target.value});\r\n    }\r\n\r\n    sendCode = () => {\r\n        if(this.state.email!=null) {\r\n            this.setState({button: \"Sending...\"});\r\n            const user = {\r\n                usernameOrEmail : this.state.email\r\n            }\r\n            axios.post('api/auth/forgot', \r\n                user)\r\n                .then(res => {\r\n                    if(res.data.success === true){\r\n                        message.success(res.data.message);\r\n                        this.setState({button: \"Send Again\"});\r\n                    } else {\r\n                        message.error(res.data.message); \r\n                    } \r\n            }).catch(e => {\r\n              message.error(\"Something went wrong\"); \r\n            })\r\n        }\r\n    }\r\n\r\n    handleConfirmBlur = e => {\r\n        const { value } = e.target;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    };\r\n    \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && value !== form.getFieldValue(\"newPassword\")) {\r\n          callback(\"Two passwords that you enter is inconsistent!\");\r\n        } else {\r\n          callback();\r\n        }\r\n    };\r\n    \r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && this.state.confirmDirty) {\r\n          form.validateFields([\"confirm\"], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n\r\n    render () {\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n       \r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n              },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <center>\r\n                    <Card title=\"Forgot Password\" bordered={false} style={{ width: '500px', height: '500px'}}>\r\n                    \r\n                        <Form layout=\"inline\">\r\n                            <Form.Item >\r\n                                <Input \r\n                                    prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\"}} />}\r\n                                    placeholder=\"Your Email\"\r\n                                    style={{ width: \"300px\" }}\r\n                                    onChange={this.setEmail}\r\n                                    required\r\n                                    />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={this.sendCode} style={{width:'120px'}}>\r\n                                        {this.state.button} \r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    \r\n                    <br/> \r\n                    <br/>\r\n                        <Form {...formItemLayout} layout=\"vertical\" style={{width:'650px'}} hideRequiredMark>\r\n        \r\n                            <Form.Item> \r\n                                {getFieldDecorator('code', {\r\n                                    rules: [{ \r\n                                    required: true, \r\n                                    len : 4,\r\n                                    message: 'Please input valid number!', \r\n                                    }],\r\n                                })(<Input  \r\n                                    id= '1'\r\n                                    prefix={<Icon type=\"key\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                                    placeholder=\"Confirm Code\"\r\n                                    />)} \r\n                            </Form.Item>\r\n                            \r\n                            <Form.Item hasFeedback>\r\n                                {getFieldDecorator(\"newPassword\", {\r\n                                rules: [\r\n                                    {\r\n                                    required: true,\r\n                                    message: \"Please input your new password!\"\r\n                                    },\r\n                                    {\r\n                                    validator: this.validateToNextPassword\r\n                                    }\r\n                                ]\r\n                                })(<Input.Password \r\n                                id= '2'\r\n                                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                                placeholder=\"New Password\"\r\n                                />)}\r\n                            </Form.Item>\r\n                            <Form.Item hasFeedback>\r\n                                {getFieldDecorator(\"confirm\", {\r\n                                rules: [\r\n                                    {\r\n                                    required: true,\r\n                                    message: \"Please confirm your new password!\"\r\n                                    },\r\n                                    {\r\n                                    validator: this.compareToFirstPassword\r\n                                    }\r\n                                ]\r\n                                })(<Input.Password \r\n                                id= '3'\r\n                                onBlur={this.handleConfirmBlur}\r\n                                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                                placeholder=\"Confirm Password\"\r\n                                />)}\r\n                            </Form.Item>\r\n                            <Form.Item >\r\n            \r\n                            <Button onClick={this.changePassword} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Reset Password\r\n                            </Button>\r\n                            <Link className=\"login-form-forgot\" to='/login'>Log in</Link>\r\n                            <br/>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </center>                  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedForgotPassword= Form.create({ name: 'register' })(Forgot);\r\n\r\nexport default WrappedForgotPassword;"]},"metadata":{},"sourceType":"module"}