{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory(require(\"react\"));else if (typeof define === 'function' && define.amd) define([\"react\"], factory);else if (typeof exports === 'object') exports[\"react-scrollbar\"] = factory(require(\"react\"));else root[\"react-scrollbar\"] = factory(root[\"react\"]);\n})(this, function (__WEBPACK_EXTERNAL_MODULE_0__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // identity function for calling harmony imports with the correct context\n\n      /******/\n\n      __webpack_require__.i = function (value) {\n        return value;\n      };\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 8);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(0);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      var _verticalScrollbar = __webpack_require__(4);\n\n      var _verticalScrollbar2 = _interopRequireDefault(_verticalScrollbar);\n\n      var _horizontalScrollbar = __webpack_require__(3);\n\n      var _horizontalScrollbar2 = _interopRequireDefault(_horizontalScrollbar);\n\n      __webpack_require__(7);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var ScrollWrapper = function (_React$Component) {\n        _inherits(ScrollWrapper, _React$Component);\n\n        function ScrollWrapper() {\n          _classCallCheck(this, ScrollWrapper);\n\n          var _this = _possibleConstructorReturn(this, (ScrollWrapper.__proto__ || Object.getPrototypeOf(ScrollWrapper)).call(this));\n\n          _this.state = {\n            ready: false,\n            scrollY: null,\n            scrollX: null,\n            top: 0,\n            left: 0,\n            scrollAreaHeight: null,\n            scrollAreaWidth: null,\n            scrollWrapperHeight: null,\n            scrollWrapperWidth: null,\n            verticalHeight: null,\n            vMovement: 0,\n            hMovement: 0,\n            dragging: false,\n            // note: dragging - fake pseudo class\n            scrolling: false,\n            // changes: scrolling (new fake pseudo class)\n            reset: false,\n            // changes: change state without rendering\n            start: {\n              y: 0,\n              x: 0\n            }\n          };\n          _this.updateSize = _this.updateSize.bind(_this);\n          _this.calculateSize = _this.calculateSize.bind(_this);\n          _this.scroll = _this.scroll.bind(_this);\n          _this.startDrag = _this.startDrag.bind(_this);\n          _this.onDrag = _this.onDrag.bind(_this);\n          _this.stopDrag = _this.stopDrag.bind(_this);\n          _this.handleChangePosition = _this.handleChangePosition.bind(_this);\n          _this.handleScrollbarDragging = _this.handleScrollbarDragging.bind(_this);\n          _this.handleScrollbarStopDrag = _this.handleScrollbarStopDrag.bind(_this);\n          return _this;\n        }\n\n        _createClass(ScrollWrapper, [{\n          key: 'componentDidMount',\n          value: function componentDidMount() {\n            this.updateSize(); // Attach The Event for Responsive View~\n\n            window.addEventListener('resize', this.updateSize);\n          } // changes: update scrollbars when parent resizing\n\n        }, {\n          key: 'componentWillReceiveProps',\n          value: function componentWillReceiveProps() {\n            this.updateSize();\n          } // changes: reset settings without rerendering (need for scrolling state)\n\n        }, {\n          key: 'shouldComponentUpdate',\n          value: function shouldComponentUpdate(nextProps, nextState) {\n            if (nextState.reset) {\n              this.setState({\n                reset: false\n              });\n              return false;\n            }\n\n            return true;\n          }\n        }, {\n          key: 'componentWillUnmount',\n          value: function componentWillUnmount() {\n            // Remove Event\n            window.removeEventListener('resize', this.updateSize);\n          }\n        }, {\n          key: 'onDrag',\n          value: function onDrag(event) {\n            if (this.state.dragging) {\n              event.preventDefault();\n              var e = event.changedTouches ? event.changedTouches[0] : event; // Invers the Movement\n\n              var yMovement = this.state.start.y - e.clientY;\n              var xMovement = this.state.start.x - e.clientX; // Update the last e.client\n\n              this.setState({\n                start: {\n                  y: e.clientY,\n                  x: e.clientX\n                }\n              }); // The next Vertical Value will be\n\n              var nextY = this.state.top + yMovement;\n              var nextX = this.state.left + xMovement;\n              this.normalizeVertical(nextY);\n              this.normalizeHorizontal(nextX);\n            }\n          }\n        }, {\n          key: 'getSize',\n          value: function getSize() {\n            // The Elements\n            var $scrollArea = this.scrollArea;\n            var $scrollWrapper = this.scrollWrapper; // Get new Elements Size\n\n            var elementSize = {\n              // Scroll Area Height and Width\n              // changes: support margin and no one child\n              scrollAreaHeight: $scrollArea.getBoundingClientRect().height,\n              scrollAreaWidth: $scrollArea.children[0].clientWidth,\n              // fixme: not working same way\n              // Scroll Wrapper Height and Width\n              scrollWrapperHeight: $scrollWrapper.clientHeight,\n              scrollWrapperWidth: $scrollWrapper.clientWidth\n            };\n            return elementSize;\n          }\n        }, {\n          key: 'stopDrag',\n          value: function stopDrag() {\n            this.setState({\n              dragging: false\n            });\n          }\n        }, {\n          key: 'scrollToY',\n          value: function scrollToY(pos) {\n            var maxVal = this.state.scrollAreaHeight - this.state.scrollWrapperHeight;\n            var val = pos;\n\n            if (typeof pos === 'string') {\n              var valK = parseInt(pos.match(/-?[\\d]*%$/)[0], 10) / 100;\n              val = valK * maxVal;\n            }\n\n            if (val < 0) {\n              val = maxVal + val;\n            }\n\n            this.normalizeVertical(val);\n          }\n        }, {\n          key: 'scrollToX',\n          value: function scrollToX(pos) {\n            var maxVal = this.state.scrollAreaWidth - this.state.scrollWrapperWidth;\n            var val = pos;\n\n            if (typeof pos === 'string') {\n              var valK = parseInt(pos.match(/-?[\\d]*%$/)[0], 10) / 100;\n              val = valK * maxVal;\n            }\n\n            if (val < 0) {\n              val = maxVal + val;\n            }\n\n            this.normalizeHorizontal(val);\n          }\n        }, {\n          key: 'normalizeVertical',\n          value: function normalizeVertical(nextPos, nextState) {\n            var _this2 = this; // Vertical Scrolling\n\n\n            var lowerEnd = this.state.scrollAreaHeight - this.state.scrollWrapperHeight; // Max Scroll Down\n            // Max Scroll Up\n\n            var trim = function trim(max, min, val) {\n              var tmax = val > max ? max : val;\n              var tmin = tmax < min ? min : tmax;\n              return tmin;\n            };\n\n            var next = trim(lowerEnd, 0, nextPos); // Update the Vertical Value\n\n            this.setState({\n              top: next,\n              vMovement: next / this.state.scrollAreaHeight * 100\n            }, function () {\n              return _this2.setState(_extends({}, nextState));\n            }); // changes: update state after operation\n          }\n        }, {\n          key: 'normalizeHorizontal',\n          value: function normalizeHorizontal(nextPos, nextState) {\n            var _this3 = this; // Horizontal Scrolling\n\n\n            var rightEnd = this.state.scrollAreaWidth - this.state.scrollWrapperWidth; // Max Scroll Right\n            // Max Scroll Right\n\n            var trim = function trim(max, min, val) {\n              var tmax = val > max ? max : val;\n              var tmin = tmax < min ? min : tmax;\n              return tmin;\n            };\n\n            var next = trim(rightEnd, 0, nextPos); // Update the Horizontal Value\n\n            this.setState({\n              left: next,\n              hMovement: next / this.state.scrollAreaWidth * 100\n            }, function () {\n              return _this3.setState(_extends({}, nextState));\n            }); // changes: update state after operation\n          }\n        }, {\n          key: 'handleChangePosition',\n          value: function handleChangePosition(movement, orientation) {\n            var _this4 = this; // Make sure the content height is not changed\n\n\n            this.calculateSize(function () {\n              // Convert Percentage to Pixel\n              var next = movement / 100;\n              if (orientation === 'vertical') _this4.normalizeVertical(next * _this4.state.scrollAreaHeight);\n              if (orientation === 'horizontal') _this4.normalizeHorizontal(next * _this4.state.scrollAreaWidth);\n            });\n          }\n        }, {\n          key: 'handleScrollbarDragging',\n          value: function handleScrollbarDragging() {\n            this.setState({\n              dragging: true\n            });\n          }\n        }, {\n          key: 'handleScrollbarStopDrag',\n          value: function handleScrollbarStopDrag() {\n            this.setState({\n              dragging: false\n            });\n          }\n        }, {\n          key: 'updateSize',\n          value: function updateSize() {\n            var elementSize = this.getSize();\n\n            if (elementSize.scrollWrapperHeight !== this.state.scrollWrapperHeight || elementSize.scrollWrapperWidth !== this.state.scrollWrapperWidth || elementSize.scrollAreaHeight !== this.state.scrollAreaHeight || elementSize.scrollAreaWidth !== this.state.scrollAreaWidth) {\n              // Set the State!\n              this.setState({\n                // Scroll Area Height and Width\n                scrollAreaHeight: elementSize.scrollAreaHeight,\n                scrollAreaWidth: elementSize.scrollAreaWidth,\n                // Scroll Wrapper Height and Width\n                scrollWrapperHeight: elementSize.scrollWrapperHeight,\n                scrollWrapperWidth: elementSize.scrollWrapperWidth,\n                // Make sure The wrapper is Ready, then render the scrollbar\n                ready: true\n              });\n            }\n          }\n        }, {\n          key: 'calculateSize',\n          value: function calculateSize(cb) {\n            var elementSize = this.getSize();\n\n            if (elementSize.scrollWrapperHeight !== this.state.scrollWrapperHeight || elementSize.scrollWrapperWidth !== this.state.scrollWrapperWidth || elementSize.scrollAreaHeight !== this.state.scrollAreaHeight || elementSize.scrollAreaWidth !== this.state.scrollAreaWidth) {\n              // Set the State!\n              this.setState({\n                // Scroll Area Height and Width\n                scrollAreaHeight: elementSize.scrollAreaHeight,\n                scrollAreaWidth: elementSize.scrollAreaWidth,\n                // Scroll Wrapper Height and Width\n                scrollWrapperHeight: elementSize.scrollWrapperHeight,\n                scrollWrapperWidth: elementSize.scrollWrapperWidth,\n                // Make sure The wrapper is Ready, then render the scrollbar\n                ready: true\n              }, cb);\n            } else cb();\n          } // DRAG EVENT JUST FOR TOUCH DEVICE~\n\n        }, {\n          key: 'startDrag',\n          value: function startDrag(event) {\n            var _this5 = this;\n\n            event.preventDefault();\n            event.stopPropagation();\n            var e = event.changedTouches ? event.changedTouches[0] : event; // Make sure the content height is not changed\n\n            this.calculateSize(function () {\n              // Prepare to drag\n              _this5.setState({\n                dragging: true,\n                start: {\n                  y: e.pageY,\n                  x: e.pageX\n                }\n              });\n            });\n          }\n        }, {\n          key: 'scroll',\n          value: function scroll(e) {\n            var _this6 = this;\n\n            e.preventDefault(); // Make sure the content height is not changed\n\n            this.calculateSize(function () {\n              // Set the wheel step\n              var num = _this6.props.speed; // DOM events\n\n              var shifted = e.shiftKey;\n              var scrollY = e.deltaY > 0 ? num : -num;\n              var scrollX = e.deltaX > 0 ? num : -num; // Fix Mozilla Shifted Wheel~\n\n              if (shifted && e.deltaX === 0) scrollX = e.deltaY > 0 ? num : -num; // Next Value\n\n              var nextY = _this6.state.top + scrollY;\n              var nextX = _this6.state.left + scrollX; // Is it Scrollable?\n\n              var canScrollY = _this6.state.scrollAreaHeight > _this6.state.scrollWrapperHeight;\n              var canScrollX = _this6.state.scrollAreaWidth > _this6.state.scrollWrapperWidth; // changes: Set scrolling state before changing position\n\n              _this6.setState({\n                scrolling: true\n              }, function () {\n                // Vertical Scrolling\n                if (canScrollY && !shifted) {\n                  _this6.normalizeVertical(nextY, {\n                    scrolling: false,\n                    reset: true\n                  });\n                } // Horizontal Scrolling\n\n\n                if (shifted && canScrollX) {\n                  _this6.normalizeHorizontal(nextX, {\n                    scrolling: false,\n                    reset: true\n                  });\n                }\n              });\n            });\n          }\n        }, {\n          key: 'render',\n          value: function render() {\n            var _this7 = this;\n\n            var className = function className(base, name, pos, isDrg, isScr) {\n              return [base + name, base + name + pos, isDrg ? base + name + ':dragging' : '', isDrg ? base + name + pos + ':dragging' : '', isScr ? base + name + ':scrolling' : '', isScr ? base + name + pos + ':scrolling' : ''].join(' ');\n            };\n\n            return _react2.default.createElement('div', {\n              onClick: this.updateSize,\n              className: this.props.className,\n              ref: function ref(c) {\n                _this7.scrollWrapper = c;\n              },\n              style: _extends({}, this.props.style, {\n                overflow: 'hidden',\n                position: 'relative'\n              })\n            }, _react2.default.createElement('div', {\n              className: className('-reactjs-scrollbar', '-area', '', this.state.dragging, this.state.scrolling),\n              ref: function ref(c) {\n                _this7.scrollArea = c;\n              },\n              onWheel: this.scroll,\n              onTouchStart: this.startDrag,\n              onTouchMove: this.onDrag,\n              onTouchEnd: this.stopDrag,\n              onChange: this.updateSize,\n              style: {\n                marginTop: this.state.top * -1 + 'px',\n                marginLeft: this.state.left * -1 + 'px'\n              }\n            }, this.props.children, this.state.ready ? _react2.default.createElement(_verticalScrollbar2.default, {\n              area: {\n                height: this.state.scrollAreaHeight\n              },\n              wrapper: {\n                height: this.state.scrollWrapperHeight\n              },\n              scrolling: this.state.vMovement,\n              draggingFromParent: this.state.dragging,\n              onChangePosition: this.handleChangePosition,\n              onDragging: this.handleScrollbarDragging,\n              onStopDrag: this.handleScrollbarStopDrag\n            }) : null, this.state.ready ? _react2.default.createElement(_horizontalScrollbar2.default, {\n              area: {\n                width: this.state.scrollAreaWidth\n              },\n              wrapper: {\n                width: this.state.scrollWrapperWidth\n              },\n              scrolling: this.state.hMovement,\n              draggingFromParent: this.state.dragging,\n              onChangePosition: this.handleChangePosition,\n              onDragging: this.handleScrollbarDragging,\n              onStopDrag: this.handleScrollbarStopDrag\n            }) : null));\n          }\n        }]);\n\n        return ScrollWrapper;\n      }(_react2.default.Component); // The Props\n\n\n      ScrollWrapper.propTypes = {\n        speed: _react2.default.PropTypes.number,\n        className: _react2.default.PropTypes.string,\n        style: _react2.default.PropTypes.shape(),\n        children: _react2.default.PropTypes.node\n      };\n      ScrollWrapper.defaultProps = {\n        speed: 53,\n        className: 'react-scrollbar-default',\n        style: {},\n        children: null\n      };\n      exports.default = ScrollWrapper;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /*\r\n      \tMIT License http://www.opensource.org/licenses/mit-license.php\r\n      \tAuthor Tobias Koppers @sokra\r\n      */\n      // css base code, injected by the css-loader\n\n      module.exports = function () {\n        var list = []; // return the list of modules as css string\n\n        list.toString = function toString() {\n          var result = [];\n\n          for (var i = 0; i < this.length; i++) {\n            var item = this[i];\n\n            if (item[2]) {\n              result.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n            } else {\n              result.push(item[1]);\n            }\n          }\n\n          return result.join(\"\");\n        }; // import a list of modules into the list\n\n\n        list.i = function (modules, mediaQuery) {\n          if (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n          var alreadyImportedModules = {};\n\n          for (var i = 0; i < this.length; i++) {\n            var id = this[i][0];\n            if (typeof id === \"number\") alreadyImportedModules[id] = true;\n          }\n\n          for (i = 0; i < modules.length; i++) {\n            var item = modules[i]; // skip already imported module\n            // this implementation is not 100% perfect for weird media query combinations\n            //  when a module is imported multiple times with different media queries.\n            //  I hope this will never occur (Hey this way we have smaller bundles)\n\n            if (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n              if (mediaQuery && !item[2]) {\n                item[2] = mediaQuery;\n              } else if (mediaQuery) {\n                item[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n              }\n\n              list.push(item);\n            }\n          }\n        };\n\n        return list;\n      };\n      /***/\n\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(0);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var HorizontalScrollbar = function (_React$Component) {\n        _inherits(HorizontalScrollbar, _React$Component);\n\n        function HorizontalScrollbar() {\n          _classCallCheck(this, HorizontalScrollbar);\n\n          var _this = _possibleConstructorReturn(this, (HorizontalScrollbar.__proto__ || Object.getPrototypeOf(HorizontalScrollbar)).call(this));\n\n          _this.state = {\n            width: 0,\n            dragging: false,\n            start: 0\n          };\n          _this.jump = _this.jump.bind(_this);\n          _this.startDrag = _this.startDrag.bind(_this);\n          return _this;\n        }\n\n        _createClass(HorizontalScrollbar, [{\n          key: 'componentDidMount',\n          value: function componentDidMount() {\n            this.calculateSize(this.props); // Put the Listener\n\n            document.addEventListener('mousemove', this.onDrag.bind(this));\n            document.addEventListener('touchmove', this.onDrag.bind(this));\n            document.addEventListener('mouseup', this.stopDrag.bind(this));\n            document.addEventListener('touchend', this.stopDrag.bind(this));\n          }\n        }, {\n          key: 'componentWillReceiveProps',\n          value: function componentWillReceiveProps(nextProps) {\n            if (nextProps.wrapper.width !== this.props.wrapper.width || nextProps.area.width !== this.props.area.width) this.calculateSize(nextProps);\n          }\n        }, {\n          key: 'componentWillUnmount',\n          value: function componentWillUnmount() {\n            // Remove the Listener\n            document.removeEventListener('mousemove', this.onDrag.bind(this));\n            document.removeEventListener('touchmove', this.onDrag.bind(this));\n            document.removeEventListener('mouseup', this.stopDrag.bind(this));\n            document.removeEventListener('touchend', this.stopDrag.bind(this));\n          }\n        }, {\n          key: 'onDrag',\n          value: function onDrag(event) {\n            var _this2 = this;\n\n            if (this.state.dragging) {\n              (function () {\n                // Make The Parent being in the Dragging State\n                _this2.props.onDragging();\n\n                event.preventDefault();\n                event.stopPropagation();\n                var e = event.changedTouches ? event.changedTouches[0] : event;\n                var xMovement = e.clientX - _this2.state.start;\n                var xMovementPercentage = xMovement / _this2.props.wrapper.width * 100; // Update the last e.clientX\n\n                _this2.setState({\n                  start: e.clientX\n                }, function () {\n                  // The next Horizontal Value will be\n                  var next = _this2.props.scrolling + xMovementPercentage; // Tell the parent to change the position\n\n                  _this2.props.onChangePosition(next, 'horizontal');\n                });\n              })();\n            }\n          }\n        }, {\n          key: 'startDrag',\n          value: function startDrag(event) {\n            event.preventDefault();\n            event.stopPropagation();\n            var e = event.changedTouches ? event.changedTouches[0] : event; // Prepare to drag\n\n            this.setState({\n              dragging: true,\n              start: e.clientX\n            });\n          }\n        }, {\n          key: 'stopDrag',\n          value: function stopDrag() {\n            if (this.state.dragging) {\n              // Parent Should Change the Dragging State\n              this.props.onStopDrag();\n              this.setState({\n                dragging: false\n              });\n            }\n          }\n        }, {\n          key: 'jump',\n          value: function jump(e) {\n            var _this3 = this;\n\n            var isContainer = e.target === this.container;\n\n            if (isContainer) {\n              (function () {\n                // Get the Element Position\n                var position = _this3.scrollbar.getBoundingClientRect(); // Calculate the horizontal Movement\n\n\n                var xMovement = e.clientX - position.left;\n                var centerize = _this3.state.width / 2;\n                var xMovementPercentage = xMovement / _this3.props.wrapper.width * 100 - centerize; // Update the last e.clientX\n\n                _this3.setState({\n                  start: e.clientX\n                }, function () {\n                  // The next Horizontal Value will be\n                  var next = _this3.props.scrolling + xMovementPercentage; // Tell the parent to change the position\n\n                  _this3.props.onChangePosition(next, 'horizontal');\n                });\n              })();\n            }\n          }\n        }, {\n          key: 'calculateSize',\n          value: function calculateSize(source) {\n            // Scrollbar Width\n            this.setState({\n              width: source.wrapper.width / source.area.width * 100\n            });\n          }\n        }, {\n          key: 'render',\n          value: function render() {\n            var _this4 = this;\n\n            var className = function className(base, name, pos, act, isAct) {\n              return [base + name, base + name + pos, isAct ? base + name + act : '', isAct ? base + name + pos + act : ''].join(' ');\n            };\n\n            if (this.state.width < 100) {\n              return _react2.default.createElement('div', {\n                className: className('-reactjs-scrollbar', '-track', ':horizontal', ':dragging', this.state.dragging || this.props.draggingFromParent),\n                ref: function ref(c) {\n                  _this4.container = c;\n                },\n                onClick: this.jump,\n                style: {\n                  position: 'absolute'\n                }\n              }, _react2.default.createElement('div', {\n                className: className('-reactjs-scrollbar', '-thumb', ':horizontal', ':dragging', this.state.dragging || this.props.draggingFromParent),\n                ref: function ref(c) {\n                  _this4.scrollbar = c;\n                },\n                onTouchStart: this.startDrag,\n                onMouseDown: this.startDrag,\n                style: {\n                  position: 'relative',\n                  width: this.state.width + '%',\n                  left: this.props.scrolling + '%'\n                }\n              }));\n            }\n\n            return null;\n          }\n        }]);\n\n        return HorizontalScrollbar;\n      }(_react2.default.Component); // The Props\n\n\n      HorizontalScrollbar.propTypes = {\n        draggingFromParent: _react2.default.PropTypes.bool.isRequired,\n        scrolling: _react2.default.PropTypes.number.isRequired,\n        wrapper: _react2.default.PropTypes.shape().isRequired,\n        area: _react2.default.PropTypes.shape().isRequired,\n        onChangePosition: _react2.default.PropTypes.func.isRequired,\n        onDragging: _react2.default.PropTypes.func.isRequired,\n        onStopDrag: _react2.default.PropTypes.func.isRequired\n      };\n      exports.default = HorizontalScrollbar;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var _react = __webpack_require__(0);\n\n      var _react2 = _interopRequireDefault(_react);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      function _possibleConstructorReturn(self, call) {\n        if (!self) {\n          throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n      }\n\n      function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n          throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n      }\n\n      var VerticalScrollbar = function (_React$Component) {\n        _inherits(VerticalScrollbar, _React$Component);\n\n        function VerticalScrollbar() {\n          _classCallCheck(this, VerticalScrollbar);\n\n          var _this = _possibleConstructorReturn(this, (VerticalScrollbar.__proto__ || Object.getPrototypeOf(VerticalScrollbar)).call(this));\n\n          _this.state = {\n            height: 0,\n            dragging: false,\n            start: 0\n          };\n          _this.jump = _this.jump.bind(_this);\n          _this.startDrag = _this.startDrag.bind(_this);\n          return _this;\n        }\n\n        _createClass(VerticalScrollbar, [{\n          key: 'componentDidMount',\n          value: function componentDidMount() {\n            this.calculateSize(this.props); // Put the Listener\n\n            document.addEventListener('mousemove', this.onDrag.bind(this));\n            document.addEventListener('touchmove', this.onDrag.bind(this));\n            document.addEventListener('mouseup', this.stopDrag.bind(this));\n            document.addEventListener('touchend', this.stopDrag.bind(this));\n          }\n        }, {\n          key: 'componentWillReceiveProps',\n          value: function componentWillReceiveProps(nextProps) {\n            if (nextProps.wrapper.height !== this.props.wrapper.height || nextProps.area.height !== this.props.area.height) this.calculateSize(nextProps);\n          }\n        }, {\n          key: 'componentWillUnmount',\n          value: function componentWillUnmount() {\n            // Remove the Listener\n            document.removeEventListener('mousemove', this.onDrag.bind(this));\n            document.removeEventListener('touchmove', this.onDrag.bind(this));\n            document.removeEventListener('mouseup', this.stopDrag.bind(this));\n            document.removeEventListener('touchend', this.stopDrag.bind(this));\n          }\n        }, {\n          key: 'onDrag',\n          value: function onDrag(event) {\n            var _this2 = this;\n\n            if (this.state.dragging) {\n              (function () {\n                // Make The Parent being in the Dragging State\n                _this2.props.onDragging();\n\n                event.preventDefault();\n                event.stopPropagation();\n                var e = event.changedTouches ? event.changedTouches[0] : event;\n                var yMovement = e.clientY - _this2.state.start;\n                var yMovementPercentage = yMovement / _this2.props.wrapper.height * 100; // Update the last e.clientY\n\n                _this2.setState({\n                  start: e.clientY\n                }, function () {\n                  // The next Vertical Value will be\n                  var next = _this2.props.scrolling + yMovementPercentage; // Tell the parent to change the position\n\n                  _this2.props.onChangePosition(next, 'vertical');\n                });\n              })();\n            }\n          }\n        }, {\n          key: 'getSize',\n          value: function getSize() {\n            // The Elements\n            var $scrollArea = this.container.parentElement;\n            var $scrollWrapper = $scrollArea.parentElement; // Get new Elements Size\n\n            var elementSize = {\n              // Scroll Area Height and Width\n              scrollAreaHeight: $scrollArea.children[0].clientHeight,\n              scrollAreaWidth: $scrollArea.children[0].clientWidth,\n              // Scroll Wrapper Height and Width\n              scrollWrapperHeight: $scrollWrapper.clientHeight,\n              scrollWrapperWidth: $scrollWrapper.clientWidth\n            };\n            return elementSize;\n          }\n        }, {\n          key: 'startDrag',\n          value: function startDrag(event) {\n            event.preventDefault();\n            event.stopPropagation();\n            var e = event.changedTouches ? event.changedTouches[0] : event; // Prepare to drag\n\n            this.setState({\n              dragging: true,\n              start: e.clientY\n            });\n          }\n        }, {\n          key: 'stopDrag',\n          value: function stopDrag() {\n            if (this.state.dragging) {\n              // Parent Should Change the Dragging State\n              this.props.onStopDrag();\n              this.setState({\n                dragging: false\n              });\n            }\n          }\n        }, {\n          key: 'jump',\n          value: function jump(e) {\n            var _this3 = this;\n\n            var isContainer = e.target === this.container;\n\n            if (isContainer) {\n              (function () {\n                // Get the Element Position\n                var position = _this3.scrollbar.getBoundingClientRect(); // Calculate the vertical Movement\n\n\n                var yMovement = e.clientY - position.top;\n                var centerize = _this3.state.height / 2;\n                var yMovementPercentage = yMovement / _this3.props.wrapper.height * 100 - centerize; // Update the last e.clientY\n\n                _this3.setState({\n                  start: e.clientY\n                }, function () {\n                  // The next Vertical Value will be\n                  var next = _this3.props.scrolling + yMovementPercentage; // Tell the parent to change the position\n\n                  _this3.props.onChangePosition(next, 'vertical');\n                });\n              })();\n            }\n          }\n        }, {\n          key: 'calculateSize',\n          value: function calculateSize(source) {\n            // Scrollbar Width\n            this.setState({\n              height: source.wrapper.height / source.area.height * 100\n            });\n          }\n        }, {\n          key: 'render',\n          value: function render() {\n            var _this4 = this;\n\n            var className = function className(base, name, pos, act, isAct) {\n              return [base + name, base + name + pos, isAct ? base + name + act : '', isAct ? base + name + pos + act : ''].join(' ');\n            };\n\n            if (this.state.height < 100) {\n              return _react2.default.createElement('div', {\n                className: className('-reactjs-scrollbar', '-track', ':vertical', ':dragging', this.state.dragging || this.props.draggingFromParent),\n                ref: function ref(c) {\n                  _this4.container = c;\n                },\n                onClick: this.jump,\n                style: {\n                  position: 'absolute'\n                }\n              }, _react2.default.createElement('div', {\n                className: className('-reactjs-scrollbar', '-thumb', ':vertical', ':dragging', this.state.dragging || this.props.draggingFromParent),\n                ref: function ref(c) {\n                  _this4.scrollbar = c;\n                },\n                onTouchStart: this.startDrag,\n                onMouseDown: this.startDrag,\n                style: {\n                  position: 'relative',\n                  height: this.state.height + '%',\n                  top: this.props.scrolling + '%'\n                }\n              }));\n            }\n\n            return null;\n          }\n        }]);\n\n        return VerticalScrollbar;\n      }(_react2.default.Component); // The Props\n\n\n      VerticalScrollbar.propTypes = {\n        draggingFromParent: _react2.default.PropTypes.bool.isRequired,\n        scrolling: _react2.default.PropTypes.number.isRequired,\n        wrapper: _react2.default.PropTypes.shape().isRequired,\n        area: _react2.default.PropTypes.shape().isRequired,\n        onChangePosition: _react2.default.PropTypes.func.isRequired,\n        onDragging: _react2.default.PropTypes.func.isRequired,\n        onStopDrag: _react2.default.PropTypes.func.isRequired\n      };\n      exports.default = VerticalScrollbar;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      exports = module.exports = __webpack_require__(2)(); // imports\n      // module\n\n      exports.push([module.i, \".react-scrollbar-default .-reactjs-scrollbar-area\\\\:scrolling {\\n  transition: all 0.5s ease;\\n  -moz-transition: all 0.5s ease;\\n  -webkit-transition: all 0.5s ease;\\n  -o-transition: all 0.5s ease; }\\n  .react-scrollbar-default .-reactjs-scrollbar-area\\\\:scrolling .-reactjs-scrollbar-thumb {\\n    transition: all 0.5s ease;\\n    -moz-transition: all 0.5s ease;\\n    -webkit-transition: all 0.5s ease;\\n    -o-transition: all 0.5s ease; }\\n\\n.react-scrollbar-default .-reactjs-scrollbar-area:hover .-reactjs-scrollbar-track {\\n  opacity: 1; }\\n\\n.react-scrollbar-default .-reactjs-scrollbar-track {\\n  transition: all 0.5s ease;\\n  -moz-transition: all 0.5s ease;\\n  -webkit-transition: all 0.5s ease;\\n  -o-transition: all 0.5s ease;\\n  opacity: 0.5;\\n  background: transparent; }\\n  .react-scrollbar-default .-reactjs-scrollbar-track:hover {\\n    background: rgba(0, 0, 0, 0.3); }\\n  .react-scrollbar-default .-reactjs-scrollbar-track\\\\:vertical {\\n    width: 10px;\\n    height: 100%;\\n    top: 0;\\n    right: 0; }\\n  .react-scrollbar-default .-reactjs-scrollbar-track\\\\:horizontal {\\n    height: 10px;\\n    width: 100%;\\n    bottom: 0;\\n    right: 0; }\\n\\n.react-scrollbar-default .-reactjs-scrollbar-thumb {\\n  background: rgba(0, 0, 0, 0.5);\\n  cursor: default;\\n  width: 10px;\\n  height: 10px; }\\n\", \"\"]); // exports\n\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports) {\n      /*\r\n      \tMIT License http://www.opensource.org/licenses/mit-license.php\r\n      \tAuthor Tobias Koppers @sokra\r\n      */\n      var stylesInDom = {},\n          memoize = function memoize(fn) {\n        var memo;\n        return function () {\n          if (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n          return memo;\n        };\n      },\n          isOldIE = memoize(function () {\n        return /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n      }),\n          getHeadElement = memoize(function () {\n        return document.head || document.getElementsByTagName(\"head\")[0];\n      }),\n          singletonElement = null,\n          singletonCounter = 0,\n          styleElementsInsertedAtTop = [];\n\n      module.exports = function (list, options) {\n        if (typeof DEBUG !== \"undefined\" && DEBUG) {\n          if (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n        }\n\n        options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n        // tags it will allow on a page\n\n        if (typeof options.singleton === \"undefined\") options.singleton = isOldIE(); // By default, add <style> tags to the bottom of <head>.\n\n        if (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n        var styles = listToStyles(list);\n        addStylesToDom(styles, options);\n        return function update(newList) {\n          var mayRemove = [];\n\n          for (var i = 0; i < styles.length; i++) {\n            var item = styles[i];\n            var domStyle = stylesInDom[item.id];\n            domStyle.refs--;\n            mayRemove.push(domStyle);\n          }\n\n          if (newList) {\n            var newStyles = listToStyles(newList);\n            addStylesToDom(newStyles, options);\n          }\n\n          for (var i = 0; i < mayRemove.length; i++) {\n            var domStyle = mayRemove[i];\n\n            if (domStyle.refs === 0) {\n              for (var j = 0; j < domStyle.parts.length; j++) {\n                domStyle.parts[j]();\n              }\n\n              delete stylesInDom[domStyle.id];\n            }\n          }\n        };\n      };\n\n      function addStylesToDom(styles, options) {\n        for (var i = 0; i < styles.length; i++) {\n          var item = styles[i];\n          var domStyle = stylesInDom[item.id];\n\n          if (domStyle) {\n            domStyle.refs++;\n\n            for (var j = 0; j < domStyle.parts.length; j++) {\n              domStyle.parts[j](item.parts[j]);\n            }\n\n            for (; j < item.parts.length; j++) {\n              domStyle.parts.push(addStyle(item.parts[j], options));\n            }\n          } else {\n            var parts = [];\n\n            for (var j = 0; j < item.parts.length; j++) {\n              parts.push(addStyle(item.parts[j], options));\n            }\n\n            stylesInDom[item.id] = {\n              id: item.id,\n              refs: 1,\n              parts: parts\n            };\n          }\n        }\n      }\n\n      function listToStyles(list) {\n        var styles = [];\n        var newStyles = {};\n\n        for (var i = 0; i < list.length; i++) {\n          var item = list[i];\n          var id = item[0];\n          var css = item[1];\n          var media = item[2];\n          var sourceMap = item[3];\n          var part = {\n            css: css,\n            media: media,\n            sourceMap: sourceMap\n          };\n          if (!newStyles[id]) styles.push(newStyles[id] = {\n            id: id,\n            parts: [part]\n          });else newStyles[id].parts.push(part);\n        }\n\n        return styles;\n      }\n\n      function insertStyleElement(options, styleElement) {\n        var head = getHeadElement();\n        var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\n        if (options.insertAt === \"top\") {\n          if (!lastStyleElementInsertedAtTop) {\n            head.insertBefore(styleElement, head.firstChild);\n          } else if (lastStyleElementInsertedAtTop.nextSibling) {\n            head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n          } else {\n            head.appendChild(styleElement);\n          }\n\n          styleElementsInsertedAtTop.push(styleElement);\n        } else if (options.insertAt === \"bottom\") {\n          head.appendChild(styleElement);\n        } else {\n          throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n        }\n      }\n\n      function removeStyleElement(styleElement) {\n        styleElement.parentNode.removeChild(styleElement);\n        var idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\n        if (idx >= 0) {\n          styleElementsInsertedAtTop.splice(idx, 1);\n        }\n      }\n\n      function createStyleElement(options) {\n        var styleElement = document.createElement(\"style\");\n        styleElement.type = \"text/css\";\n        insertStyleElement(options, styleElement);\n        return styleElement;\n      }\n\n      function createLinkElement(options) {\n        var linkElement = document.createElement(\"link\");\n        linkElement.rel = \"stylesheet\";\n        insertStyleElement(options, linkElement);\n        return linkElement;\n      }\n\n      function addStyle(obj, options) {\n        var styleElement, update, remove;\n\n        if (options.singleton) {\n          var styleIndex = singletonCounter++;\n          styleElement = singletonElement || (singletonElement = createStyleElement(options));\n          update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n          remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n        } else if (obj.sourceMap && typeof URL === \"function\" && typeof URL.createObjectURL === \"function\" && typeof URL.revokeObjectURL === \"function\" && typeof Blob === \"function\" && typeof btoa === \"function\") {\n          styleElement = createLinkElement(options);\n          update = updateLink.bind(null, styleElement);\n\n          remove = function remove() {\n            removeStyleElement(styleElement);\n            if (styleElement.href) URL.revokeObjectURL(styleElement.href);\n          };\n        } else {\n          styleElement = createStyleElement(options);\n          update = applyToTag.bind(null, styleElement);\n\n          remove = function remove() {\n            removeStyleElement(styleElement);\n          };\n        }\n\n        update(obj);\n        return function updateStyle(newObj) {\n          if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) return;\n            update(obj = newObj);\n          } else {\n            remove();\n          }\n        };\n      }\n\n      var replaceText = function () {\n        var textStore = [];\n        return function (index, replacement) {\n          textStore[index] = replacement;\n          return textStore.filter(Boolean).join('\\n');\n        };\n      }();\n\n      function applyToSingletonTag(styleElement, index, remove, obj) {\n        var css = remove ? \"\" : obj.css;\n\n        if (styleElement.styleSheet) {\n          styleElement.styleSheet.cssText = replaceText(index, css);\n        } else {\n          var cssNode = document.createTextNode(css);\n          var childNodes = styleElement.childNodes;\n          if (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\n          if (childNodes.length) {\n            styleElement.insertBefore(cssNode, childNodes[index]);\n          } else {\n            styleElement.appendChild(cssNode);\n          }\n        }\n      }\n\n      function applyToTag(styleElement, obj) {\n        var css = obj.css;\n        var media = obj.media;\n\n        if (media) {\n          styleElement.setAttribute(\"media\", media);\n        }\n\n        if (styleElement.styleSheet) {\n          styleElement.styleSheet.cssText = css;\n        } else {\n          while (styleElement.firstChild) {\n            styleElement.removeChild(styleElement.firstChild);\n          }\n\n          styleElement.appendChild(document.createTextNode(css));\n        }\n      }\n\n      function updateLink(linkElement, obj) {\n        var css = obj.css;\n        var sourceMap = obj.sourceMap;\n\n        if (sourceMap) {\n          // http://stackoverflow.com/a/26603875\n          css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n        }\n\n        var blob = new Blob([css], {\n          type: \"text/css\"\n        });\n        var oldSrc = linkElement.href;\n        linkElement.href = URL.createObjectURL(blob);\n        if (oldSrc) URL.revokeObjectURL(oldSrc);\n      }\n      /***/\n\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      // style-loader: Adds some css to the DOM by adding a <style> tag\n      // load the styles\n      var content = __webpack_require__(5);\n\n      if (typeof content === 'string') content = [[module.i, content, '']]; // add the styles to the DOM\n\n      var update = __webpack_require__(6)(content, {});\n\n      if (content.locals) module.exports = content.locals; // Hot Module Replacement\n\n      if (false) {\n        // When the styles change, update the <style> tags\n        if (!content.locals) {\n          module.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./style_default.scss\", function () {\n            var newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/sass-loader/index.js!./style_default.scss\");\n\n            if (typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n            update(newContent);\n          });\n        } // When the module is disposed, remove the <style> tags\n\n\n        module.hot.dispose(function () {\n          update();\n        });\n      }\n      /***/\n\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _reactScrollbar = __webpack_require__(1);\n\n      var _reactScrollbar2 = _interopRequireDefault(_reactScrollbar);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _reactScrollbar2.default;\n      /***/\n    }])\n  );\n});","map":null,"metadata":{},"sourceType":"script"}