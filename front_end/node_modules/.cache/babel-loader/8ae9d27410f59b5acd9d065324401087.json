{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\src\\\\auth\\\\Forgot.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Icon, Form, Button, Input, Card, message, Row, Col } from 'antd';\nimport axios from 'axios';\n\nvar Forgot =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Forgot, _React$Component);\n\n  function Forgot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Forgot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Forgot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false\n    };\n\n    _this.changePassword = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        var passwords = {\n          currentPassword: values.currentPassword,\n          newPassword: values.newPassword\n        };\n\n        if (!err) {\n          axios.post('http://localhost:5000/api/auth/change_password', passwords, {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem(\"header\")\n            }\n          }).then(function (res) {\n            if (res.data === true) {\n              message.success(\"Password Updated Successfully!\");\n\n              _this.props.form.resetFields();\n            } else {\n              message.error(\"Current password not match!\");\n            }\n          }).catch(function (e) {\n            console.log(e);\n            message.error(\"Something went wrong!\");\n          });\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue(\"newPassword\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(Forgot, [{\n    key: \"handelCancel\",\n    value: function handelCancel() {\n      this.props.form.resetFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        style: {\n          background: '#ECECEC',\n          padding: '150px',\n          height: '760px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 8,\n        offset: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        height: \"430px\",\n        alt: \"example\",\n        src: \"https://image.freepik.com/free-vector/flat-thinking-concept_23-2148163823.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(Col, {\n        span: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Forgot Password\",\n        bordered: false,\n        style: {\n          width: 500,\n          height: '430px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, formItemLayout, {\n        layout: \"vertical\",\n        hideRequiredMark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.handleSubmit,\n        style: {\n          width: '100px',\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"check-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, getFieldDecorator('code', {\n        rules: [{\n          required: true,\n          len: 10,\n          message: 'Please input valid number!'\n        }]\n      })(React.createElement(Input, {\n        id: \"1\",\n        prefix: React.createElement(Icon, {\n          type: \"key\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }),\n        placeholder: \"Confirm Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, getFieldDecorator(\"newPassword\", {\n        rules: [{\n          required: true,\n          message: \"Please input your new password!\"\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input.Password, {\n        id: \"2\",\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }),\n        placeholder: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, getFieldDecorator(\"confirm\", {\n        rules: [{\n          required: true,\n          message: \"Please confirm your new password!\"\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input.Password, {\n        id: \"3\",\n        onBlur: this.handleConfirmBlur,\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }),\n        placeholder: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleLogin,\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Log in\"), React.createElement(Link, {\n        className: \"login-form-forgot\",\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Lo\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Forgot;\n}(React.Component);\n\nvar WrappedForgotPassword = Form.create({\n  name: 'register'\n})(Forgot);\nexport default WrappedForgotPassword;","map":{"version":3,"sources":["C:\\Users\\Pramuditha Kaushalya\\Desktop\\VX Leave\\front_end\\src\\auth\\Forgot.js"],"names":["React","Link","Icon","Form","Button","Input","Card","message","Row","Col","axios","Forgot","state","confirmDirty","changePassword","e","preventDefault","props","form","validateFieldsAndScroll","err","values","passwords","currentPassword","newPassword","post","headers","Authorization","localStorage","getItem","then","res","data","success","resetFields","error","catch","console","log","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","formItemLayout","wrapperCol","xs","span","background","padding","height","width","handleSubmit","float","rules","required","len","color","validator","handleLogin","Component","WrappedForgotPassword","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon, Form, Button, Input, Card, message, Row, Col } from 'antd';\r\nimport axios from 'axios';\r\n\r\nclass Forgot extends React.Component {\r\n\r\n    state = {\r\n        confirmDirty: false\r\n    }\r\n\r\n    changePassword = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n          const passwords = {\r\n            currentPassword : values.currentPassword,\r\n            newPassword : values.newPassword\r\n          }\r\n\r\n          if (!err) {\r\n            axios.post('http://localhost:5000/api/auth/change_password', \r\n            passwords,\r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"header\")\r\n                }\r\n            })\r\n            .then(res => {\r\n                if(res.data === true){\r\n                  message.success(\"Password Updated Successfully!\");\r\n                  this.props.form.resetFields(); \r\n                }  else{\r\n                  message.error(\"Current password not match!\"); \r\n                }\r\n            }).catch(e => {\r\n              console.log(e);\r\n              message.error(\"Something went wrong!\"); \r\n            })\r\n            \r\n          }\r\n        });\r\n    }\r\n    \r\n    handelCancel() {\r\n      this.props.form.resetFields();\r\n    }\r\n\r\n    handleConfirmBlur = e => {\r\n        const { value } = e.target;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    };\r\n    \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && value !== form.getFieldValue(\"newPassword\")) {\r\n          callback(\"Two passwords that you enter is inconsistent!\");\r\n        } else {\r\n          callback();\r\n        }\r\n    };\r\n    \r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const { form } = this.props;\r\n        if (value && this.state.confirmDirty) {\r\n          form.validateFields([\"confirm\"], { force: true });\r\n        }\r\n        callback();\r\n    };\r\n\r\n    render () {\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n       \r\n        const formItemLayout = {\r\n            wrapperCol: {\r\n              xs: { span: 24 }\r\n            },\r\n        };\r\n\r\n        return(\r\n            <div style={{ background: '#ECECEC', padding: '150px', height: '760px'}}>\r\n                <Row gutter={5}>\r\n                    <Col span={8} offset={3}>\r\n                        <img height= '430px' alt=\"example\" src=\"https://image.freepik.com/free-vector/flat-thinking-concept_23-2148163823.jpg\" />\r\n                    </Col> \r\n\r\n                    <Col span={9}>\r\n                    <Card title=\"Forgot Password\" bordered={false} style={{ width: 500, height: '430px'}}>\r\n                    <center>\r\n                        <Form {...formItemLayout} layout=\"vertical\" hideRequiredMark>\r\n                    \r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit} style={{width:'100px', float:'right'}}>\r\n                                    <Icon type=\"check-circle\" /> \r\n                                </Button>\r\n                                </Form.Item>\r\n                            <Form.Item> \r\n                                {getFieldDecorator('code', {\r\n                                    rules: [{ \r\n                                    required: true, \r\n                                    len : 10,\r\n                                    message: 'Please input valid number!', \r\n                                    }],\r\n                                })(<Input  \r\n                                    id= '1'\r\n                                    prefix={<Icon type=\"key\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                                    placeholder=\"Confirm Code\"\r\n                                    />)} \r\n                            </Form.Item>\r\n                            \r\n                            <Form.Item hasFeedback>\r\n                                {getFieldDecorator(\"newPassword\", {\r\n                                rules: [\r\n                                    {\r\n                                    required: true,\r\n                                    message: \"Please input your new password!\"\r\n                                    },\r\n                                    {\r\n                                    validator: this.validateToNextPassword\r\n                                    }\r\n                                ]\r\n                                })(<Input.Password \r\n                                id= '2'\r\n                                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                                placeholder=\"New Password\"\r\n                                />)}\r\n                            </Form.Item>\r\n                            <Form.Item hasFeedback>\r\n                                {getFieldDecorator(\"confirm\", {\r\n                                rules: [\r\n                                    {\r\n                                    required: true,\r\n                                    message: \"Please confirm your new password!\"\r\n                                    },\r\n                                    {\r\n                                    validator: this.compareToFirstPassword\r\n                                    }\r\n                                ]\r\n                                })(<Input.Password \r\n                                id= '3'\r\n                                onBlur={this.handleConfirmBlur}\r\n                                prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                                placeholder=\"Confirm Password\"\r\n                                />)}\r\n                            </Form.Item>\r\n                            <Form.Item >\r\n            \r\n                            <Button onClick={this.handleLogin} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Log in\r\n                            </Button>\r\n                            <Link className=\"login-form-forgot\" to='/login'>Lo</Link>\r\n                            <br/>\r\n                        </Form.Item>\r\n                        </Form>\r\n                    </center>\r\n                    </Card>\r\n                    </Col> \r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedForgotPassword= Form.create({ name: 'register' })(Forgot);\r\n\r\nexport default WrappedForgotPassword;"]},"metadata":{},"sourceType":"module"}