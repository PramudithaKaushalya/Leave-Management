{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\VX Leave\\\\front_end\\\\src\\\\components\\\\Settings\\\\ContactsNumber.js\";\nimport React from \"react\";\nimport { Icon, Form, Button, Row, Col, Input, Card, Table } from 'antd';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nvar ContactsNumber =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContactsNumber, _React$Component);\n\n  function ContactsNumber() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactsNumber);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactsNumber)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: undefined\n    };\n\n    _this.handleContact = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log(values);\n          var contact = {\n            name: values.name || undefined,\n            contact: values.contact || undefined,\n            relation: values.relation || undefined,\n            employee: {\n              emp_id: 4\n            } || undefined\n          };\n          axios.post('http://localhost:5000/contact/add', contact, {\n            headers: {\n              Authorization: 'Bearer ' + localStorage.getItem(\"header\")\n            }\n          }).then(function (res) {\n            swal(\"Yeah!\", res.data, \"success\");\n            console.log(\"res\", res.data);\n          }).catch(function (e) {\n            swal(\"Oops!\", \"Didn't Added!!!\", \"error\");\n            console.log(\"res\", e);\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactsNumber, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.post('http://localhost:5000/contact/employee', {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem(\"header\")\n        }\n      }).then(function (res) {\n        console.log(\"res\", res.data);\n\n        _this2.setState({\n          data: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var columns = [_objectSpread({\n        title: 'Id',\n        dataIndex: 'emp_id'\n      }, this.getColumnSearchProps('Id')), _objectSpread({\n        title: 'First Name',\n        dataIndex: 'first_name'\n      }, this.getColumnSearchProps('first_name')), _objectSpread({\n        title: 'Second Name',\n        dataIndex: 'second_name'\n      }, this.getColumnSearchProps('second_name')), {\n        title: 'Email',\n        dataIndex: 'email'\n      }, {\n        title: 'Contact',\n        dataIndex: 'contact'\n      }, _objectSpread({\n        title: 'Supervisor 01',\n        dataIndex: 'supervisor1'\n      }, this.getColumnSearchProps('supervisor1')), {\n        dataIndex: '',\n        key: 'x',\n        render: function render() {\n          return React.createElement(Button, {\n            type: \"primary\",\n            onClick: _this3.showUpdateDrawer.bind(_this3, 'emp_id'),\n            shape: \"circle\",\n            icon: \"edit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          });\n        }\n      }, {\n        dataIndex: '',\n        key: 'x',\n        render: function render() {\n          return React.createElement(Button, {\n            type: \"danger\",\n            onClick: _this3.handleDelete.bind(_this3, 'emp_id'),\n            shape: \"circle\",\n            icon: \"delete\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          });\n        }\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Contact Numbers\",\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"vertical\",\n        hideRequiredMark: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, getFieldDecorator(\"name\", {\n        rules: [{\n          required: true,\n          message: \"Please input your emergancy contact person !\"\n        }]\n      })(React.createElement(Input, {\n        id: \"1\",\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }),\n        placeholder: \"\\xA0\\xA0\\xA0\\xA0Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, getFieldDecorator(\"contact\", {\n        rules: [{\n          required: true,\n          message: \"Please input your emergancy contact !\"\n        }]\n      })(React.createElement(Input, {\n        id: \"2\",\n        prefix: React.createElement(Icon, {\n          type: \"phone\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }),\n        placeholder: \"\\xA0\\xA0\\xA0\\xA0Contact Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, getFieldDecorator(\"relation\", {\n        rules: [{\n          required: true,\n          message: \"Please input relation for emergancy person !\"\n        }]\n      })(React.createElement(Input, {\n        id: \"3\",\n        onBlur: this.handleConfirmBlur,\n        prefix: React.createElement(Icon, {\n          type: \"home\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }),\n        placeholder: \"\\xA0\\xA0\\xA0\\xA0Relation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 17,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.handleContact,\n        style: {\n          width: '100px',\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"check-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), \"Submit\"))), React.createElement(Col, {\n        span: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"danger\",\n        onClick: this.props.close,\n        style: {\n          width: '100px',\n          float: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"close-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), \"Cancel\")))))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Table, {\n        rowKey: function rowKey(record) {\n          return record.emp_id;\n        },\n        columns: columns,\n        dataSource: this.state.data,\n        pagination: {\n          pageSize: 2\n        },\n        size: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ContactsNumber;\n}(React.Component);\n\nvar WrappedContactNumber = Form.create({\n  name: 'register'\n})(ContactsNumber);\nexport default WrappedContactNumber;","map":{"version":3,"sources":["C:\\Users\\Pramuditha Kaushalya\\Desktop\\VX Leave\\front_end\\src\\components\\Settings\\ContactsNumber.js"],"names":["React","Icon","Form","Button","Row","Col","Input","Card","Table","axios","swal","ContactsNumber","state","data","undefined","handleContact","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","contact","name","relation","employee","emp_id","post","headers","Authorization","localStorage","getItem","then","res","catch","setState","getFieldDecorator","tailFormItemLayout","wrapperCol","xs","span","offset","sm","columns","title","dataIndex","getColumnSearchProps","key","render","showUpdateDrawer","bind","handleDelete","rules","required","message","color","handleConfirmBlur","width","float","close","record","pageSize","Component","WrappedContactNumber","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Icon, Form, Button, Row, Col, Input, Card, Table } from 'antd';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nclass ContactsNumber extends React.Component {\r\n\r\n    componentWillMount () {\r\n        axios.post('http://localhost:5000/contact/employee', \r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + localStorage.getItem(\"header\")\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(\"res\", res.data);\r\n                this.setState({\r\n                    data: res.data\r\n                })\r\n            })\r\n    }\r\n\r\n    state = {\r\n        data : undefined\r\n    }\r\n\r\n    handleContact = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log(values);\r\n\r\n                const contact = {\r\n                    name: values.name || undefined,\r\n                    contact: values.contact || undefined,\r\n                    relation: values.relation || undefined,\r\n                    employee: {emp_id:4} || undefined\r\n                }\r\n\r\n                axios.post('http://localhost:5000/contact/add', contact, \r\n                {\r\n                    headers: {\r\n                        Authorization: 'Bearer ' + localStorage.getItem(\"header\")\r\n                    }\r\n                })\r\n                .then(res => {\r\n                  swal(\"Yeah!\",res.data,\"success\");\r\n                  console.log(\"res\", res.data)\r\n                })\r\n                .catch(e => {\r\n                  swal(\"Oops!\",\"Didn't Added!!!\",\"error\");\r\n                  console.log(\"res\", e)\r\n                })\r\n              \r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n              xs: {\r\n                span: 24,\r\n                offset: 0,\r\n              },\r\n              sm: {\r\n                span: 16,\r\n                offset: 8,\r\n              },\r\n            },\r\n        };\r\n\r\n        const columns = [\r\n            {\r\n              title: 'Id',\r\n              dataIndex: 'emp_id',\r\n              ...this.getColumnSearchProps('Id'),\r\n            },\r\n            {\r\n              title: 'First Name',\r\n              dataIndex: 'first_name',\r\n              ...this.getColumnSearchProps('first_name'),\r\n            },\r\n            {\r\n                title: 'Second Name',\r\n                dataIndex: 'second_name',\r\n                ...this.getColumnSearchProps('second_name'),\r\n              },\r\n            {\r\n              title: 'Email',\r\n              dataIndex: 'email',\r\n            },\r\n            {\r\n                title: 'Contact',\r\n                dataIndex: 'contact',\r\n            },\r\n            {\r\n                title: 'Supervisor 01',\r\n                dataIndex: 'supervisor1',\r\n                ...this.getColumnSearchProps('supervisor1'),\r\n            },\r\n            {\r\n                dataIndex: '',\r\n                key: 'x',\r\n                render: () => <Button type=\"primary\" onClick={this.showUpdateDrawer.bind(this, 'emp_id')} shape=\"circle\" icon=\"edit\" />,\r\n            },\r\n            {\r\n                dataIndex: '',\r\n                key: 'x',\r\n                render: () => <Button type=\"danger\" onClick={this.handleDelete.bind(this, 'emp_id')} shape=\"circle\" icon=\"delete\" />,\r\n            },\r\n        ];\r\n\r\n        return(\r\n            <div>\r\n                <Card title='Contact Numbers' bordered={false}> \r\n                 <Form layout=\"vertical\" hideRequiredMark>\r\n            \r\n                    <Form.Item >\r\n                        {getFieldDecorator(\"name\", {\r\n                        rules: [\r\n                            {\r\n                            required: true,\r\n                            message: \"Please input your emergancy contact person !\"\r\n                            }\r\n                        ]\r\n                        })(<Input\r\n                        id= '1'\r\n                        prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                        placeholder=\"&nbsp;&nbsp;&nbsp;&nbsp;Name\"\r\n                        />)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item >\r\n                        {getFieldDecorator(\"contact\", {\r\n                        rules: [\r\n                            {\r\n                            required: true,\r\n                            message: \"Please input your emergancy contact !\"\r\n                            }\r\n                        ]\r\n                        })(<Input\r\n                        id= '2'\r\n                        prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                        placeholder=\"&nbsp;&nbsp;&nbsp;&nbsp;Contact Number\"\r\n                        />)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item >\r\n                        {getFieldDecorator(\"relation\", {\r\n                        rules: [\r\n                            {\r\n                            required: true,\r\n                            message: \"Please input relation for emergancy person !\"\r\n                            }\r\n                        ]\r\n                        })(<Input\r\n                        id= '3'\r\n                        onBlur={this.handleConfirmBlur}\r\n                        prefix={<Icon type=\"home\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                        placeholder=\"&nbsp;&nbsp;&nbsp;&nbsp;Relation\"\r\n                        />)}\r\n                    </Form.Item>\r\n                    <Row>\r\n                        <Col span={17}>  \r\n                        <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" onClick={this.handleContact} style={{width:'100px', float:'right'}}>\r\n                        <Icon type=\"check-circle\" /> \r\n                            Submit\r\n                        </Button>\r\n                        </Form.Item>\r\n                        </Col> \r\n\r\n                        <Col span={7}> \r\n                        <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"danger\" onClick={this.props.close} style={{width:'100px', float:'left'}}>\r\n                        <Icon type=\"close-circle\" /> \r\n                            Cancel\r\n                        </Button>\r\n                        </Form.Item>\r\n                        </Col> \r\n                    </Row>\r\n                </Form>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <Table rowKey={record => record.emp_id} columns={columns} dataSource={this.state.data}  pagination={{ pageSize: 2 }} size=\"middle\" />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedContactNumber= Form.create({ name: 'register' })(ContactsNumber);\r\n\r\nexport default WrappedContactNumber;"]},"metadata":{},"sourceType":"module"}