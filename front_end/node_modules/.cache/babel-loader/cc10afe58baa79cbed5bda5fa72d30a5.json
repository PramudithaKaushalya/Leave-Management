{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\spform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\spform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\spform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\spform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\spform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\spform\\\\src\\\\auth\\\\Register.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Button, Card, AutoComplete } from \"antd\";\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\nvar residences = [{\n  value: \"zhejiang\",\n  label: \"Zhejiang\",\n  children: [{\n    value: \"hangzhou\",\n    label: \"Hangzhou\",\n    children: [{\n      value: \"xihu\",\n      label: \"West Lake\"\n    }]\n  }]\n}, {\n  value: \"jiangsu\",\n  label: \"Jiangsu\",\n  children: [{\n    value: \"nanjing\",\n    label: \"Nanjing\",\n    children: [{\n      value: \"zhonghuamen\",\n      label: \"Zhong Hua Men\"\n    }]\n  }]\n}];\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      return React.createElement(\"div\", {\n        style: {\n          background: '#ECECEC',\n          padding: '150px',\n          height: '800px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Login Here\",\n        bordered: false,\n        style: {\n          width: 400,\n          height: '550px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, getFieldDecorator(\"name\", {\n        rules: [{\n          required: true,\n          message: \"Please input your nickname!\",\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }),\n        placeholder: \"User Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, getFieldDecorator(\"email\", {\n        rules: [{\n          type: \"email\",\n          message: \"The input is not valid E-mail!\"\n        }, {\n          required: true,\n          message: \"Please input your E-mail!\"\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"mail\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }),\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, getFieldDecorator(\"password\", {\n        rules: [{\n          required: true,\n          message: \"Please input your password!\"\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input.Password, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }),\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, getFieldDecorator(\"confirm\", {\n        rules: [{\n          required: true,\n          message: \"Please confirm your password!\"\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input.Password, {\n        onBlur: this.handleConfirmBlur,\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }),\n        placeholder: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, getFieldDecorator(\"residence\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Home Address!\"\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"home\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }),\n        placeholder: \"Home Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, getFieldDecorator(\"phone\", {\n        rules: [{\n          required: true,\n          message: \"Please input your phone number!\"\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"phone\",\n          style: {\n            color: \"rgba(0,0,0,.25)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }),\n        placeholder: \"Contact Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Register\")))));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar WrappedRegistrationForm = Form.create({\n  name: \"register\"\n})(RegistrationForm);\nWrappedRegistrationForm;","map":{"version":3,"sources":["C:\\Users\\Pramuditha Kaushalya\\Desktop\\spform\\src\\auth\\Register.js"],"names":["React","ReactDOM","Form","Input","Tooltip","Icon","Cascader","Select","Button","Card","AutoComplete","Option","AutoCompleteOption","residences","value","label","children","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","background","padding","height","width","rules","required","message","whitespace","color","type","validator","Component","WrappedRegistrationForm","create","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Icon,\r\n  Cascader,\r\n  Select,\r\n  Button,\r\n  Card,\r\n  AutoComplete\r\n} from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [\r\n  {\r\n    value: \"zhejiang\",\r\n    label: \"Zhejiang\",\r\n    children: [\r\n      {\r\n        value: \"hangzhou\",\r\n        label: \"Hangzhou\",\r\n        children: [\r\n          {\r\n            value: \"xihu\",\r\n            label: \"West Lake\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    value: \"jiangsu\",\r\n    label: \"Jiangsu\",\r\n    children: [\r\n      {\r\n        value: \"nanjing\",\r\n        label: \"Nanjing\",\r\n        children: [\r\n          {\r\n            value: \"zhonghuamen\",\r\n            label: \"Zhong Hua Men\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: []\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ background: '#ECECEC', padding: '150px', height: '800px' }}>\r\n      <Card title=\"Login Here\" bordered={false} style={{ width: 400, height: '550px'}}>\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item >\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your nickname!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"User Name\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"email\", {\r\n            rules: [\r\n              {\r\n                type: \"email\",\r\n                message: \"The input is not valid E-mail!\"\r\n              },\r\n              {\r\n                required: true,\r\n                message: \"Please input your E-mail!\"\r\n              }\r\n            ]\r\n          })(<Input \r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Email\"\r\n            />)}\r\n        </Form.Item>\r\n        <Form.Item hasFeedback>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your password!\"\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword\r\n              }\r\n            ]\r\n          })(<Input.Password \r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Password\"\r\n            />)}\r\n        </Form.Item>\r\n        <Form.Item hasFeedback>\r\n          {getFieldDecorator(\"confirm\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\"\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword\r\n              }\r\n            ]\r\n          })(<Input.Password onBlur={this.handleConfirmBlur}\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Confirm Password\"\r\n          />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"residence\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your Home Address!\"\r\n              }\r\n            ]\r\n          })(<Input \r\n            prefix={<Icon type=\"home\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Home Address\"\r\n          />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"phone\", {\r\n            rules: [\r\n              { required: true, message: \"Please input your phone number!\" }\r\n            ]\r\n          })(<Input\r\n            prefix={<Icon type=\"phone\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Contact Number\" \r\n            />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      </Card></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: \"register\" })(\r\n  RegistrationForm\r\n);\r\n\r\n\r\n WrappedRegistrationForm\r\n"]},"metadata":{},"sourceType":"module"}