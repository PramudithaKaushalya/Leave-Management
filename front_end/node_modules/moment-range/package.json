{
  "_from": "moment-range@1.0.2",
  "_id": "moment-range@1.0.2",
  "_inBundle": false,
  "_integrity": "sha1-rCBAjPjPbEiNFX34gr3SHOMFGy8=",
  "_location": "/moment-range",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "moment-range",
    "fetchSpec": "1.0.2",
    "name": "moment-range",
    "raw": "moment-range@1.0.2",
    "rawSpec": "1.0.2",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/moment-range/-/moment-range-1.0.2.tgz",
  "_shasum": "ac20408cf8cf6c488d157df882bdd21ce3051b2f",
  "_shrinkwrap": null,
  "_spec": "moment-range@1.0.2",
  "_where": "C:\\Users\\Pramuditha Kaushalya\\Desktop\\VX Leave\\front_end",
  "author": {
    "email": "gianni@runlevel6.org",
    "name": "Gianni Chiappetta",
    "url": "http://gf3.ca"
  },
  "bugs": {
    "url": "https://github.com/gf3/moment-range/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "moment": ">= 1"
  },
  "deprecated": false,
  "description": "Fancy date ranges for Moment.js",
  "devDependencies": {
    "coffee-script": "~1",
    "grunt": "~0.4.1",
    "grunt-contrib-coffee": "~0.7.0",
    "grunt-mocha-test": "~0.7.0",
    "grunt-umd": "~1.3.0",
    "mocha": "1.3.0",
    "should": "0.6.3"
  },
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/gf3/moment-range",
  "license": {
    "type": "Public Domain",
    "url": "https://github.com/gf3/moment-range/raw/master/UNLICENSE"
  },
  "main": "./lib/moment-range",
  "name": "moment-range",
  "optionalDependencies": {},
  "readme": "moment-range\n============\n\nFancy date ranges for [Moment.js][moment].\n\n\nExamples\n--------\n\n### Create\n\nCreate a date range:\n\n``` javascript\nvar start = new Date(2012, 0, 15)\n  , end   = new Date(2012, 4, 23)\n  , range = moment().range(start, end);\n```\n\nYou can also create a date range with moment objects:\n\n``` javascript\nvar start = moment(\"2011-04-15\", \"YYYY-MM-DD\")\n  , end   = moment(\"2011-11-27\", \"YYYY-MM-DD\")\n  , range = moment().range(start, end);\n```\n\n### Contains / Within / Overlaps / Intersect / Subtract\n\nCheck to see if your range contains a date/moment:\n\n``` javascript\nvar start  = new Date(2012, 4, 1)\n  , end    = new Date(2012, 4, 23)\n  , lol    = new Date(2012, 4, 15)\n  , wat    = new Date(2012, 2, 27)\n  , range  = moment().range(start, end)\n  , range2 = moment().range(lol, wat);\n\nrange.contains(lol); // true\nrange.contains(wat); // false\n```\n\nFind out if your moment falls within a date range:\n\n``` javascript\nvar start = new Date(2012, 4, 1)\n  , end   = new Date(2012, 4, 23)\n  , when  = moment(\"2012-05-10\", \"YYYY-MM-DD\")\n  , range = moment().range(start, end);\n\nwhen.within(range); // true\n```\n\nDoes it overlap another range?\n\n``` javascript\nrange.overlaps(range2); // true\n```\n\nWhat are the intersecting ranges?\n\n``` javascript\nrange.intersect(range2); // [moment().range(lol, end)]\n```\n\nSubtracting one range from another.\n\n``` javascript\nrange.subtract(range2); // [moment().range(start, lol)]\n```\n\n### Iterate\n\nIterate over your date range by an amount of time or another range:\n\n``` javascript\nvar start = new Date(2012, 2, 1)\n  , two   = new Date(2012, 2, 2)\n  , end   = new Date(2012, 2, 5)\n  , range1 = moment().range(start, end)\n  , range2 = moment().range(start, two) // One day\n  , acc = [];\n\nrange1.by('days', function(moment) {\n  // Do something with `moment`\n});\n```\n\nAny of the units accepted by [moment.js' `add`\nmethod](http://momentjs.com/docs/#/manipulating/add/) may be used.\n\nYou can also iterate by another range:\n\n``` javascript\nrange1.by(range2, function(moment) {\n  // Do something with `moment`\n  acc.push(moment);\n});\n\nacc.length == 5 // true\n```\n\n### Compare\n\nCompare range lengths or add them together with simple math:\n\n``` javascript\nvar r_1 = moment().range(new Date(2011, 2, 5), new Date(2011, 3, 15))\n  , r_2 = moment().range(new Date(1995, 0, 1), new Date(1995, 12, 25));\n\nr_2 > r_1 // true\n\nr_1 + r_2 // duration of both ranges in milliseconds\n\nMath.abs(r_1 - r_2); // difference of ranges in milliseconds\n```\n\n### Equality\n\nCheck if two ranges are the same, i.e. their starts and ends are the same:\n\n``` javascript\nvar r_1 = moment().range(new Date(2011, 2, 5), new Date(2011, 3, 15))\n  , r_2 = moment().range(new Date(2011, 2, 5), new Date(2011, 3, 15))\n  , r_3 = moment().range(new Date(2011, 3, 5), new Date(2011, 6, 15));\n\nr_1.isSame(r_2) // true\nr_2.isSame(r_3) // false\n```\n\n\nInstallation\n------------\n\nmoment-range works in both the browser and [node.js][node].\n\n\n### Browser\n\nSimply include moment-range after moment.js:\n\n``` html\n<script src=\"/javascripts/moment-range.js\"></script>\n```\n\n\n### NPM\n\nInstall via npm:\n\n``` sh\nnpm install moment-range\n```\n\nOr put it in your `package.json`:\n\n``` json\n{ \"moment-range\": \"~1\" }\n```\n\n\n### Bower\n\n``` sh\nbower install moment-range\n```\n\n\nRunning Tests\n-------------\n\nClone this bad boy:\n\n``` bash\ngit clone https://git@github.com/gf3/moment-range.git\n```\n\nInstall the dependencies:\n\n``` bash\nnpm install\n```\n\nDo all the things! (including the tests)\n\n``` bash\n$ grunt\n```\n\n\nLicense\n-------\n\nmoment-range is [UNLICENSED][unlicense].\n\n[moment]: http://momentjs.com/\n[node]: http://nodejs.org/\n[unlicense]: http://unlicense.org/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://git@github.com/gf3/moment-range.git"
  },
  "version": "1.0.2"
}
