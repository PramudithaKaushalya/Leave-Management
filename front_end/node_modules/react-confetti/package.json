{
  "_from": "react-confetti",
  "_id": "react-confetti@4.0.1",
  "_inBundle": false,
  "_integrity": "sha512-uQrb1Q4p8Wg3xyxSGtsIxdd+hOd3jRNpVq5qET6m9B+fihsjF7mHbMngoiziya3DZtstaqCBPpTcyByXLu8CnQ==",
  "_location": "/react-confetti",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-confetti",
    "fetchSpec": "latest",
    "name": "react-confetti",
    "raw": "react-confetti",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-confetti/-/react-confetti-4.0.1.tgz",
  "_shasum": "f9e76b198ce02f1c13809a1d1ec1bc92f5450dde",
  "_shrinkwrap": null,
  "_spec": "react-confetti",
  "_where": "C:\\Users\\Pramuditha Kaushalya\\Desktop\\spform",
  "author": {
    "email": "alampros@gmail.com",
    "name": "Aaron Lampros"
  },
  "bugs": {
    "url": "https://github.com/alampros/react-confetti/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "dependencies": {
    "tween-functions": "^1.2.0"
  },
  "deprecated": false,
  "description": "React component to draw confetti for your party.",
  "devDependencies": {
    "@babel/cli": "^7.5.5",
    "@babel/core": "^7.5.5",
    "@babel/plugin-proposal-class-properties": "^7.5.5",
    "@babel/plugin-proposal-object-rest-spread": "^7.5.5",
    "@babel/preset-env": "^7.5.5",
    "@babel/preset-react": "^7.0.0",
    "@babel/preset-typescript": "^7.3.3",
    "@semantic-release/changelog": "^3.0.2",
    "@semantic-release/commit-analyzer": "^6.1.0",
    "@semantic-release/git": "^7.0.8",
    "@semantic-release/github": "^5.2.10",
    "@semantic-release/npm": "^5.1.4",
    "@semantic-release/release-notes-generator": "^7.1.4",
    "@storybook/addon-actions": "^5.1.10",
    "@storybook/addon-info": "^5.1.10",
    "@storybook/addon-knobs": "^5.1.10",
    "@storybook/addon-links": "^5.1.10",
    "@storybook/addon-notes": "^5.1.10",
    "@storybook/addon-storysource": "^5.1.10",
    "@storybook/addons": "^5.1.10",
    "@storybook/react": "^5.1.10",
    "@types/react": "^16.8.24",
    "@typescript-eslint/eslint-plugin": "^1.13.0",
    "@typescript-eslint/parser": "^1.13.0",
    "babel-eslint": "^10.0.1",
    "babel-loader": "^8.0.5",
    "commitizen": "^4.0.3",
    "cz-conventional-changelog": "^3.0.2",
    "eslint": "^6.1.0",
    "eslint-config-standard": "^13.0.1",
    "eslint-config-standard-react": "^8.0.0",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-node": "^9.0.1",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-react": "^7.14.3",
    "eslint-plugin-react-hooks": "^1.0.1",
    "eslint-plugin-standard": "^4.0.0",
    "nodemon": "^1.18.10",
    "react": "^16.2.0",
    "react-docgen-typescript-loader": "^3.0.1",
    "react-dom": "^16.2.0",
    "react-fps-stats": "^0.1.2",
    "react-use": "^10.5.0",
    "semantic-release": "^15.13.19",
    "typescript": "^3.3.3333",
    "webpack": "^4.39.1",
    "webpack-cli": "^3.3.6"
  },
  "files": [
    "LICENSE.md",
    "README.md",
    "dist/",
    "index.js"
  ],
  "homepage": "https://github.com/alampros/react-confetti#readme",
  "keywords": [
    "component",
    "confetti",
    "react",
    "react-component"
  ],
  "license": "MIT",
  "main": "dist/react-confetti.min.js",
  "name": "react-confetti",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "0.14.x || ^15.0.1 || ^16.2.0"
  },
  "readme": "# react-confetti\nConfetti without the cleanup. [Demo](http://alampros.github.io/react-confetti/)\n\n[![Build Status](https://travis-ci.org/alampros/react-confetti.svg?branch=master)](https://travis-ci.org/alampros/react-confetti)\n[![npm](https://img.shields.io/npm/v/react-confetti.svg)](https://www.npmjs.com/package/react-confetti)\n[![npm bundle size](https://img.shields.io/bundlephobia/min/react-confetti.svg)](https://bundlephobia.com/result?p=react-confetti)\n![npm type definitions](https://img.shields.io/npm/types/react-confetti.svg)\n\n\nBased on a pen by @Gthibaud: https://codepen.io/Gthibaud/pen/ENzXbp\n\n[![demogif][2]][1]\n\n[1]: http://alampros.github.com/react-confetti\n[2]: http://alampros.github.io/react-confetti/confetti-demo-anim.gif (demo gif)\n\n## Install\n\n```sh\nnpm install react-confetti\n```\n\n## Use\n\n`width` and `height` props are recommended. They will default to the initial window dimensions, but will not respond to resize events. It is recommended to provide the dimensions yourself. Here is an example using [a hook](https://github.com/streamich/react-use/blob/master/docs/useWindowSize.md):\n\n```jsx\nimport React from 'react'\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\n\nexport default () => {\n  const { width, height } = useWindowSize()\n  return (\n    <Confetti\n      width={width}\n      height={height}\n    />\n  )\n}\n\n```\n\n## Props\n\n| Property             | Type                                                                                                       | Default                                                                                                                                                                                                                                                                            | Description                                                           |\n| ----------------     | ---------------------                                                                                      | ---                                                                                                                                                                                                                                                                                | ---                                                                   |\n| `width`              | `Number`                                                                                                   | `window.innerWidth \\|\\| 300`                                                                                                                                                                                                                                                       | Width of the `<canvas>` element.                                      |\n| `height`             | `Number`                                                                                                   | `window.innerHeight \\|\\| 200`                                                                                                                                                                                                                                                      | Height of the `<canvas>` element.                                     |\n| `numberOfPieces`     | `Number`                                                                                                   | 200                                                                                                                                                                                                                                                                                | Number of confetti pieces at one time.                                |\n| `confettiSource`     | `{ x: Number, y: Number, w: Number, h: Number }`                                                           | `{x: 0, y: 0, w: canvas.width, h:0}`                                                                                                                                                                                                                                               | Rectangle where the confetti should spawn. Default is across the top. |\n| `friction`           | `Number`                                                                                                   | 0.99                                                                                                                                                                                                                                                                               |                                                                       |\n| `wind`               | `Number`                                                                                                   | 0                                                                                                                                                                                                                                                                                  |                                                                       |\n| `gravity`            | `Number`                                                                                                   | 0.1                                                                                                                                                                                                                                                                                |                                                                       |\n| `initialVelocityX`   | `Number`                                                                                                   | 4                                                                                                                                                                                                                                                                                  | How fast confetti is emitted horizontally                             |\n| `initialVelocityY`   | `Number`                                                                                                   | 10                                                                                                                                                                                                                                                                                 | How fast confetti is emitted vertically                               |\n| `colors`             | `String[]`                                                                                                 | `['#f44336'`</br>`'#e91e63'`</br>`'#9c27b0'`</br>`'#673ab7'`</br>`'#3f51b5'`</br>`'#2196f3'`</br>`'#03a9f4'`</br>`'#00bcd4'`</br>`'#009688'`</br>`'#4CAF50'`</br>`'#8BC34A'`</br>`'#CDDC39'`</br>`'#FFEB3B'`</br>`'#FFC107'`</br>`'#FF9800'`</br>`'#FF5722'`</br>`'#795548']`</br> | All available Colors for the confetti pieces.                         |\n| `opacity`            | `Number`                                                                                                   | 1.0                                                                                                                                                                                                                                                                                |                                                                       |\n| `recycle`            | `Bool`                                                                                                     | true                                                                                                                                                                                                                                                                               | Keep spawning confetti after `numberOfPieces` pieces have been shown. |\n| `run`                | `Bool`                                                                                                     | true                                                                                                                                                                                                                                                                               | Run the animation loop                                                |\n| `tweenDuration`      | `Number`                                                                                                   | 5000                                                                                                                                                                                                                                                                               | How fast the confetti is added                                        |\n| `tweenFunction`      | `(currentTime: number, currentValue: number, targetValue: number, duration: number, s?: number) => number` | easeInOutQuad                                                                                                                                                                                                                                                                      | See [tween-functions](https://github.com/chenglou/tween-functions)    |\n| `drawShape`          | `(context: CanvasRenderingContext2D) => void`                                                              | `undefined`                                                                                                                                                                                                                                                                        | See below                                                             |\n| `onConfettiComplete` | `(confetti: Confetti) => void`                                                                             | `undefined`                                                                                                                                                                                                                                                                        | Called when all confetti has fallen off-canvas.                       |\n\n\n\n# `drawShape()`\n\nDraw a custom shape for a particle. If not provided, defaults to a random selection of a square, circle or strip confetto. The function is called with the canvas context as a parameter and the [Particle](src/Particle.ts) as the `this` context.\n\nFor example, to draw all spirals:\n\n```jsx\n<Confetti\n  drawShape={ctx => {\n    ctx.beginPath()\n    for(let i = 0; i < 22; i++) {\n      const angle = 0.35 * i\n      const x = (0.2 + (1.5 * angle)) * Math.cos(angle)\n      const y = (0.2 + (1.5 * angle)) * Math.sin(angle)\n      ctx.lineTo(x, y)\n    }\n    ctx.stroke()\n    ctx.closePath()\n  }}\n/>\n```\n\n",
  "readmeFilename": "README.md",
  "release": {
    "plugins": [
      "@semantic-release/changelog",
      "@semantic-release/commit-analyzer",
      "@semantic-release/git",
      "@semantic-release/github",
      "@semantic-release/npm",
      "@semantic-release/release-notes-generator"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alampros/react-confetti.git"
  },
  "scripts": {
    "build": "yarn build-types && yarn build-transpile && yarn build-bundle",
    "build-bundle": "webpack",
    "build-storybook": "build-storybook -s ./.storybook/public",
    "build-transpile": "babel src --out-dir dist --extensions \".ts\"",
    "build-types": "tsc",
    "clean": "git clean -xfd dist/",
    "cleanall": "git clean -xfd .",
    "commit": "git-cz",
    "develop": "start-storybook -p 3000",
    "lint": "eslint . --ext .js --ext .ts --ext .tsx",
    "prebuild": "yarn clean",
    "prepare": "yarn run lint && yarn run build",
    "semantic-release": "semantic-release",
    "test": "tsc; yarn run lint",
    "watch": "webpack --watch"
  },
  "types": "dist/types/ReactConfetti.d.ts",
  "version": "4.0.1"
}
