{
  "_from": "react-scrollbar-js",
  "_id": "react-scrollbar-js@1.0.1",
  "_inBundle": false,
  "_integrity": "sha1-wT/V12xbuFj5T7Mg8FT12ysOrc4=",
  "_location": "/react-scrollbar-js",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-scrollbar-js",
    "fetchSpec": "latest",
    "name": "react-scrollbar-js",
    "raw": "react-scrollbar-js",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-scrollbar-js/-/react-scrollbar-js-1.0.1.tgz",
  "_shasum": "c13fd5d76c5bb858f94fb320f054f5db2b0eadce",
  "_shrinkwrap": null,
  "_spec": "react-scrollbar-js",
  "_where": "C:\\Users\\Pramuditha Kaushalya\\Desktop\\spform",
  "author": {
    "email": "bosnaufalemail@gmail.com",
    "name": "Naufal Rabbani"
  },
  "bugs": {
    "url": "https://github.com/BosNaufal/react-scrollbar/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "The Simplest Scroll Area Component with custom scrollbar for React Js",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.2.10",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-2": "^6.18.0",
    "css-loader": "^0.26.1",
    "es6-promise": "^4.0.5",
    "eslint": "^3.13.1",
    "eslint-config-airbnb": "^14.0.0",
    "eslint-plugin-babel": "^4.0.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^3.0.2",
    "eslint-plugin-react": "^6.9.0",
    "node-sass": "^4.3.0",
    "react": "^15.4.2",
    "react-dom": "^15.0.0||^14.0.0",
    "sass-loader": "^4.1.1",
    "style-loader": "^0.13.1",
    "webpack": "^2.2.0",
    "webpack-dev-server": "^2.2.0"
  },
  "homepage": "https://github.com/BosNaufal/react-scrollbar#readme",
  "keywords": [
    "component",
    "custom scrollbar",
    "perfect scrollbar",
    "react",
    "react js",
    "react scrollbar",
    "react slim scroll",
    "react-component",
    "react-scrollbar",
    "scrollbar",
    "slimscroll",
    "web-components"
  ],
  "license": "MIT",
  "main": "./dist/react-scrollbar.js",
  "name": "react-scrollbar-js",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.0.0||^14.0.0"
  },
  "readme": "# React Scrollbar\n\nThe Simplest Scroll Area Component with custom scrollbar for [React Js](http://facebook.github.io/react/). It's adopted from [reactScrollbar](https://github.com/souhe/reactScrollbar) but without any dependencies. All animation, Height and Width are pure CSS, So it's TOTALLY **CUSTOMIZABLE** and **RESPONSIVE**! YEAH!.\n\n[DEMO](https://bosnaufal.github.io/react-scrollbar)\n\n## Install\n\nYou can install it via NPM\n```bash\nnpm install react-scrollbar-js --save\n```\n\n> **Note**: You don't need any other dependencies or webpack loaders to start using this package. You can even use it with the `ES5` sintax if you need. But all examples in this readme will be shown in the `ES6` sintax.\n\n## Usage\n\n```javascript\n// scrollable-component.jsx:\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport ReactScrollbar from 'react-scrollbar-js';\n\nclass ScrollableComponent extends React.Component {\n\n  render() {\n    const myScrollbar = {\n      width: 400,\n      height: 400,\n    };\n    return(\n      <ReactScrollbar style={myScrollbar}>\n        <div className=\"should-have-a-children scroll-me\">\n          <p>And Now</p>\n          <p>You Can Put</p>\n          <p>A Long Content Here</p>\n        </div>\n      </ReactScrollbar>\n    )\n  }\n\n}\n\n```\n\n> **Note**: `react-scrollbar-js` ships with a good looking default appearance, so you don't need to add any css styles to start it working. Only you need is to pass dimensions via [css](#classname-string-optional) or [inline style](#style-object-optional). But you can simply [customize](#scrollbar-structure) it by importing your own css styles.\n\n## Props\n##### className (String) [optional]\n\nJust the ordinary class name of the root scrollbar element (`div`). So, It's TOTALLY **CUSTOMIZABLE!**\n\n> default value: `'react-scrollbar-default'`\n\nYou can set different class names in oder to have some scrollbars with a various appearance on same page.\n\n```css\n/*The Scrollbar Root*/\n.react-scrollbar-default {\n  width: 35%;\n  min-width: 300px;\n  max-height: 450px;\n}\n\n/*The Content*/\n.scroll-me {\n  min-width: 750px;\n}\n```\n\n##### style (Object) [optional]\n\nIf you prefer to use inline style to styling the scrollbar root (`div` element), you can pass the styling object to this props.\n\n> default value: `{ }`\n\n```javascript\nlet styling = {\n\n  /* Scrollbar */\n  scrollbar: {\n    width: \"35%\",\n    minWidth: \"300px\",\n    maxHeight: \"450px\"\n  },\n\n}\n\n<ReactScrollbar style={ styling.scrollbar } />\n```\n\n##### speed (Number) [optional]\nThe wheel step in pixel.\n\n> default value: `53`\n\n## API\n##### scrollToY(y), scrollToX(x)\n\nTo scroll the scrollbar by vertical/horizontal\n\nwhere `x` and `y` could be:\n\n- numbers - sets scrollbar position in pixels\n- strings like '58%' - sets scrollbar position in percents\n\nif the value is negative it'll count from the end in the backward direction. ex: \n\n- `scrollToY(150)` set vertical scroll to 150px from top\n- `scrollToY(-150)` set vertical scroll to 150px from bottom\n- `scrollToY('30%')` set vertical scroll to 30% from top\n- `scrollToY('-30%')` same as `scrollToY('70%')`\n\nif you pass the value that is bigger than the maximum size it will scroll to 100%.\n\n```javascript\n// in ScrollableComponent class:\nscrollTo(pos) {\n  return () => {\n    this.scroll.scrollToY(pos);\n// or:    this.scroll.scrollToX(pos);\n  };\n}\n\n// in ScrollableComponent render():\n...\n<ReactScrollbar ref={(c) => { this.scroll = c; }}>\n...\n```\n\n\n## Customizing the appearance\n\nYou can add you own css styles to define the appearence and behavior of scrollbar. Scrollbar has a structure of nested elements wich defined by specific css classes. You need to follow this structure to apply your properties to the right place. Each element has a set of classes (the number is different depending on the current mode). In general it has name like: `-reactjs-scrollbar-element:modifier1:modifier2`. Modifiers are optional and specify a position or a interaction mode of element. For your convenience the elements has a range of classes with different combinations of modifiers, ex:\n\n```javascript\n-reactjs-scrollbar-track // for any scrollbar track in any state\n-reactjs-scrollbar-track:vertical // for the vertical scrollbar track in any state\n-reactjs-scrollbar-track:dragging // for any scrollbar track while dragging\n-reactjs-scrollbar-track:vertical:dragging // for vertical scrollbar track while dragging\n-reactjs-scrollbar-track:vertical:dragging:hover // ...and while mouse is over it\n\n```\n\nBut oder of modifiers does matter, so you **can't** set `-reactjs-scrollbar-track:dragging:vertical`\n\n*This class structure is inspired by [-webkit-scrollbar](https://css-tricks.com/custom-scrollbars-in-webkit/), but here it's pretty simplified*\n\n##### Scrollbar structure\n\n```javascript\nreact-scrollbar-default // The scrollbar root. You can set any className here\n    \n    -reactjs-scrollbar-area // Scrollbar children and tracks are here\n    -reactjs-scrollbar-area:dragging // when it's dragging by mouse\n    -reactjs-scrollbar-area:scrolling // when it's scrolling by mouse wheel\n    \n        scroll-content // it just a child element, you can set any className\n        \n        -reactjs-scrollbar-track // vertical track\n        -reactjs-scrollbar-track:vertical:dragging // you can use one of them or bouth\n        \n            -reactjs-scrollbar-thumb // thumb on vertical track\n            -reactjs-scrollbar-thumb:vertical:dragging // you can use one of them or bouth\n            \n        -reactjs-scrollbar-track // horizontal track\n        -reactjs-scrollbar-track:horizontal:dragging // you can use one of them or bouth\n        \n            -reactjs-scrollbar-thumb // thumb on horizontal track\n            -reactjs-scrollbar-thumb:horizontal:dragging // you can use one of them or bouth\n\n```\n\n> You can add `:hover` or any pseudo class you need. \n\n##### Style Applying\n\nIn oder to set custom style for your scrollbar add css styles to your page.\n\n```js\n// scrollable-component.jsx:\nimport './style_custom1.css';\n\n// ScrollableComponent class:\n...\n<ReactScrollbar />\n...\n```\n\n```css\n// style_custom1.css:\n.react-scrollbar-default .-reactjs-scrollbar-thumb {\n  background: red;\n  cursor: default;\n  width: 10px;\n  height: 10px; \n}\n```\n\nYou can have some scrollbars with a different appearance. You can scope it by setting different root class names for them.\n\nYou can use the default style as a starting point for customizing:\n\n[style_default.css](doc/examples/style_default.css)\n\n[style_default.scss](doc/examples/style_default.scss)\n\n\n## Examples\n\nThis repo has some example projects.\n\n```shell\ngit clone https://github.com/BosNaufal/react-scrollbar.git\ncd react-scrollbar-js/doc/examples/simple\n# or \ncd react-scrollbar-js/doc/examples/custom\n\nnpm i\nnpm start\n```\n\nopen [localhost:8080](http://localhost:8080/) in your browser.\n\n<details>\n  <summary>\n    Simple example whit navigation API\n  </summary>\n  \n  It has scrollbar with default settings and some navigation buttons\n  \n  ![simple](doc/img/simple.png)\n  \n</details>\n\n<details>\n  <summary>\n    Example of customizing scrollbars\n  </summary>\n  \n  It has scrollbars with different css styles.\n  \n  ![custom](doc/img/custom.png)\n  \n</details>\n\n\n## Contributing\n\nStart from cloning this repo:\n\n```shell\ngit clone https://github.com/BosNaufal/react-scrollbar.git\ncd react-scrollbar-js\nnpm i\nnpm start\n```\n\nopen [localhost:8080](http://localhost:8080/) in your browser.\n\nYou will see a demo app with a scrollbar area.\nAll source code of this package is located in `src/` folder and the demo app is in `develop/` (it's not included into this package).\n\nWe use `webpack-dev-server` for developing. It starts by `npm start`. The config file is `webpack.dev.config.js`.\n\nWe publish to NPM a compiled and bundled code, so it could be used in ES5 projects and don't have any dependencies. To prepare a library bundle we use `webpack` with the `webpack.publish.config.js` config file.\n\nTo publish it to NPM save all src files and type:\n```\nnpm publish\n```\n\nthis script automatically prepare dist folder for publishing and if there are no errors publish it to NPM.\n\nYou can check this process without publishing by typing:\n```\nnpm run prepublish\n```\n\nit'll do the follow:\n\n- checks src code with ESLint (`npm run lint`)\n\n- builds the library package into `dist/` folder (`npm run build`)\n\n- puts an actual copy of default style into `doc/examples` (`npm run getstyles`) *you need to push it to GitHub manually after that*\n\nWe use ESLint for code linting in this project. You can try to fix some common linting issues by typing `npm run lintfix`. It'll check the code only within `src/` folder.\n\nWe are welcome any issues or PR's to make this project better!\n\n## Thank You for Making this useful~\n\n## Let's talk about some projects with me\nJust Contact Me At:\n- Email: [bosnaufalemail@gmail.com](mailto:bosnaufalemail@gmail.com)\n- Skype Id: bosnaufal254\n- twitter: [@BosNaufal](https://twitter.com/BosNaufal)\n\n## License\n[MIT](http://opensource.org/licenses/MIT)\nCopyright (c) 2016 - forever Naufal Rabbani\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/BosNaufal/react-scrollbar.git"
  },
  "scripts": {
    "build": "webpack --config webpack.publish.config.js",
    "compile": "babel src --out-dir out && node-sass src --output out",
    "getstyles": "cp src/style_default.scss doc/examples && node-sass src/style_default.scss --output doc/examples",
    "lint": "eslint src --ext .jsx,.js",
    "lintfix": "eslint src --ext .jsx,.js --fix",
    "prepublish": "npm run lint && npm run build && npm run getstyles",
    "start": "webpack-dev-server --inline --hot --config webpack.dev.config.js"
  },
  "version": "1.0.1"
}
