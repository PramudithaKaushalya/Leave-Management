'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ScrollPad = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ScrollPad = exports.ScrollPad = function (_React$Component) {
  _inherits(ScrollPad, _React$Component);

  function ScrollPad() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ScrollPad);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScrollPad.__proto__ || Object.getPrototypeOf(ScrollPad)).call.apply(_ref, [this].concat(args))), _this), _this.calculateMargin = function (ref) {
      var pad = _this.props.pad;


      if (ref && ref.scrollHeight) {
        return ref.scrollHeight > ref.clientHeight ? pad : '0';
      }
    }, _this.padDirection = function () {
      return _this.props.rtl ? 'paddingLeft' : 'paddingRight';
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ScrollPad, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.forceUpdate();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this,
          _extends2;

      return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), {
        ref: function ref(node) {
          _this2.containerRef = node;
        },
        className: this.props.className,
        style: _extends((_extends2 = {}, _defineProperty(_extends2, this.padDirection(), this.calculateMargin(this.containerRef)), _defineProperty(_extends2, 'width', 'auto'), _extends2), this.props.style)
      });
    }
  }]);

  return ScrollPad;
}(_react2.default.Component);

ScrollPad.defaultProps = {
  rtl: false,
  pad: '20px'
};

ScrollPad.propTypes = {
  children: _propTypes2.default.node,
  style: _propTypes2.default.object,
  rtl: _propTypes2.default.bool,
  pad: _propTypes2.default.string,
  className: _propTypes2.default.string
};

exports.default = ScrollPad;